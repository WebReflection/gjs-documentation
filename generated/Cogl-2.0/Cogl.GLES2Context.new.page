<?xml version="1.0"?>
<page id="Cogl.GLES2Context.new"
      type="topic"
      style="constructor"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Cogl.GLES2Context" group="constructor" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Cogl.GLES2Context</api:type>
      </api:returns>
      <api:name>cogl_gles2_context_new</api:name>
      <api:arg>
        <api:type>Cogl.Context</api:type>
        <api:name>ctx</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Cogl.GLES2Context.new</title>
  <synopsis><code mime="text/x-gjs">
function new(ctx: <link xref="Cogl.Context">Cogl.Context</link>): <link xref="Cogl.GLES2Context">Cogl.GLES2Context</link> {
    // Gjs wrapper for cogl_gles2_context_new()
}
  </code></synopsis>
  <p>Allocates a new OpenGLES 2.0 context that can be used to render to
#CoglOffscreen framebuffers (Rendering to <link xref="Cogl.Onscreen"/>
framebuffers is not currently supported).</p>  <p>To actually access the OpenGLES 2.0 api itself you need to use
<link xref="Cogl.GLES2Context.get_vtable"/>. You should not try to directly link
to and use the symbols provided by the a system OpenGLES 2.0
driver.</p>  <p>Once you have allocated an OpenGLES 2.0 context you can make it
current using <link xref="Cogl.push_gles2_context"/>. For those familiar with
using the EGL api, this serves a similar purpose to eglMakeCurrent.</p>  <p>&lt;note&gt;Before using this api applications can check for OpenGLES 2.0
api support by checking for <link xref="Cogl.FeatureID"/>.ogl_feature_id_gles2_context support
with <link xref="Cogl.has_feature"/>. This function will return <code>false</code> and
return an <link xref="Cogl.GLES2ContextError"/>.unsupported error if the
feature isn't available.&lt;/note&gt;</p>
  <p>Since 2.0</p>
<terms>
<item>
<title><code>ctx</code></title>
  <p>A <link xref="Cogl.Context"/></p>
</item>
<item>
<title><code>Returns</code></title>
  <p>A newly allocated <link xref="Cogl.GLES2Context"/> or <code>null</code> if there
              was an error and @error will be updated in that case.</p>
</item>
</terms>

</page>
