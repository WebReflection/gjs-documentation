<?xml version="1.0"?>
<page id="Cogl.Onscreen.get_buffer_age"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Cogl.Onscreen" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Number(gint)</api:type>
      </api:returns>
      <api:name>cogl_onscreen_get_buffer_age</api:name>
    </api:function>
  </info>
  <title>Cogl.Onscreen.prototype.get_buffer_age</title>
  <synopsis><code mime="text/x-gjs">
function get_buffer_age(): Number(gint) {
    // Gjs wrapper for cogl_onscreen_get_buffer_age()
}
  </code></synopsis>
  <p>Gets the current age of the buffer contents.</p>  <p>This function allows applications to query the age of the current
back buffer contents for a <link xref="Cogl.Onscreen"/> as the number of frames
elapsed since the contents were most recently defined.</p>  <p>These age values exposes enough information to applications about
how Cogl internally manages back buffers to allow applications to
re-use the contents of old frames and minimize how much must be
redrawn for the next frame.</p>  <p>The back buffer contents can either be reported as invalid (has an
age of 0) or it may be reported to be the same contents as from n
frames prior to the current frame.</p>  <p>The queried value remains valid until the next buffer swap.</p>  <p>&lt;note&gt;One caveat is that under X11 the buffer age does not reflect
changes to buffer contents caused by the window systems. X11
applications must track Expose events to determine what buffer
regions need to additionally be repaired each frame.&lt;/note&gt;</p>  <p>The recommended way to take advantage of this buffer age api is to
build up a circular buffer of length 3 for tracking damage regions
over the last 3 frames and when starting a new frame look at the
age of the buffer and combine the damage regions for the current
frame with the damage regions of previous @age frames so you know
everything that must be redrawn to update the old contents for the
new frame.</p>  <p>&lt;note&gt;If the system doesn't not support being able to track the age
of back buffers then this function will always return 0 which
implies that the contents are undefined.&lt;/note&gt;</p>  <p>&lt;note&gt;The <link xref="Cogl.FeatureID"/>.ogl_feature_id_buffer_age feature can optionally be
explicitly checked to determine if Cogl is currently tracking the
age of <link xref="Cogl.Onscreen"/> back buffer contents. If this feature is
missing then this function will always return 0.&lt;/note&gt;</p>
  <p>Since 1.14</p>
<terms>
<item>
<title><code>Returns</code></title>
  <p>The age of the buffer contents or 0 when the buffer
              contents are undefined.</p>
</item>
</terms>

</page>
