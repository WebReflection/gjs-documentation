<?xml version="1.0"?>
<page id="Cogl.TextureRectangle.new_with_size"
      type="topic"
      style="constructor"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Cogl.TextureRectangle" group="constructor" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Cogl.TextureRectangle</api:type>
      </api:returns>
      <api:name>cogl_texture_rectangle_new_with_size</api:name>
      <api:arg>
        <api:type>Cogl.Context</api:type>
        <api:name>ctx</api:name>
      </api:arg>
      <api:arg>
        <api:type>Number(gint)</api:type>
        <api:name>width</api:name>
      </api:arg>
      <api:arg>
        <api:type>Number(gint)</api:type>
        <api:name>height</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Cogl.TextureRectangle.new_with_size</title>
  <synopsis><code mime="text/x-gjs">
function new_with_size(ctx: <link xref="Cogl.Context">Cogl.Context</link>, width: Number(gint), height: Number(gint)): <link xref="Cogl.TextureRectangle">Cogl.TextureRectangle</link> {
    // Gjs wrapper for cogl_texture_rectangle_new_with_size()
}
  </code></synopsis>
  <p>Creates a new <link xref="Cogl.TextureRectangle"/> texture with a given <code>width</code>,
and <code>height</code>. This texture is a low-level texture that the GPU can
sample from directly unlike high-level textures such as
<link xref="Cogl.Texture2DSliced"/> and <link xref="Cogl.AtlasTexture"/>.</p>  <p>&lt;note&gt;Unlike for <link xref="Cogl.Texture2D"/> textures, coordinates for
<link xref="Cogl.TextureRectangle"/> textures should not be normalized. So instead
of using the coordinate (1, 1) to sample the bottom right corner of
a rectangle texture you would use (<code>width</code>, <code>height</code>) where <code>width</code>
and <code>height</code> are the width and height of the texture.&lt;/note&gt;</p>  <p>&lt;note&gt;If you want to sample from a rectangle texture from GLSL you
should use the sampler2DRect sampler type.&lt;/note&gt;</p>  <p>&lt;note&gt;Applications wanting to use <link xref="Cogl.TextureRectangle"/> should
first check for the <link xref="Cogl.FeatureID"/>.ogl_feature_id_texture_rectangle feature
using <link xref="Cogl.has_feature"/>.&lt;/note&gt;</p>  <p>The storage for the texture is not allocated before this function
returns. You can call <link xref="Cogl.Texture.allocate"/> to explicitly
allocate the underlying storage or preferably let Cogl
automatically allocate storage lazily when it may know more about
how the texture is going to be used and can optimize how it is
allocated.</p>
  <p>Since 1.10</p>
<terms>
<item>
<title><code>ctx</code></title>
  <p>A <link xref="Cogl.Context"/> pointer</p>
</item>
<item>
<title><code>width</code></title>
  <p>The texture width to allocate</p>
</item>
<item>
<title><code>height</code></title>
  <p>The texture height to allocate</p>
</item>
<item>
<title><code>Returns</code></title>
  <p>A pointer to a new <link xref="Cogl.TextureRectangle"/>
         object with no storage allocated yet.</p>
</item>
</terms>

</page>
