<?xml version="1.0"?>
<page id="Cogl.Texture2D.new_from_file"
      type="topic"
      style="constructor"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Cogl.Texture2D" group="constructor" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Cogl.Texture2D</api:type>
      </api:returns>
      <api:name>cogl_texture_2d_new_from_file</api:name>
      <api:arg>
        <api:type>Cogl.Context</api:type>
        <api:name>ctx</api:name>
      </api:arg>
      <api:arg>
        <api:type>String</api:type>
        <api:name>filename</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Cogl.Texture2D.new_from_file</title>
  <synopsis><code mime="text/x-gjs">
function new_from_file(ctx: <link xref="Cogl.Context">Cogl.Context</link>, filename: String): <link xref="Cogl.Texture2D">Cogl.Texture2D</link> {
    // Gjs wrapper for cogl_texture_2d_new_from_file()
}
  </code></synopsis>
  <p>Creates a low-level <link xref="Cogl.Texture2D"/> texture from an image file.</p>  <p>The storage for the texture is not allocated before this function
returns. You can call <link xref="Cogl.Texture.allocate"/> to explicitly
allocate the underlying storage or preferably let Cogl
automatically allocate storage lazily when it may know more about
how the texture is being used and can optimize how it is allocated.</p>  <p>The texture is still configurable until it has been allocated so
for example you can influence the internal format of the texture
using <link xref="Cogl.Texture.set_components"/> and
<link xref="Cogl.Texture.set_premultiplied"/>.</p>  <p>&lt;note&gt;Many GPUs only support power of two sizes for <link xref="Cogl.Texture2D"/>
textures. You can check support for non power of two textures by
checking for the <link xref="Cogl.FeatureID"/>.ogl_feature_id_texture_npot feature via
<link xref="Cogl.has_feature"/>.&lt;/note&gt;</p>
  <p>Since 1.16</p>
<terms>
<item>
<title><code>ctx</code></title>
  <p>A <link xref="Cogl.Context"/></p>
</item>
<item>
<title><code>filename</code></title>
  <p>the file to load</p>
</item>
<item>
<title><code>Returns</code></title>
  <p>A newly created <link xref="Cogl.Texture2D"/> or <code>null</code> on failure
              and @error will be updated.</p>
</item>
</terms>

</page>
