<?xml version="1.0"?>
<page id="Cogl.PollFD"
      type="guide"
      style="class"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="class" type="guide"/>
  </info>
  <title>Cogl.PollFD</title>
  <synopsis><code>
const Cogl = imports.gi.Cogl;

let pollFD = new Cogl.PollFD({
    <link xref='Cogl.PollFD-fd'>fd</link>: value
    <link xref='Cogl.PollFD-events'>events</link>: value
    <link xref='Cogl.PollFD-revents'>revents</link>: value
});
  </code></synopsis>
  <p>A struct for describing the state of a file descriptor that Cogl
needs to block on. The @events field contains a bitmask of
<link xref="Cogl.PollFDEvent"/>&lt;!-- --&gt;s that should cause the application to wake
up. After the application is woken up from idle it should pass back
an array of <link xref="Cogl.PollFD"/>&lt;!-- --&gt;s to Cogl and update the @revents
mask to the actual events that occurred on the file descriptor.</p>  <p>Note that CoglPollFD is deliberately exactly the same as struct
pollfd on Unix so that it can simply be cast when calling poll.</p>
  <p>Since 1.10</p>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="constructor" style="linklist">
    <title>Constructors</title>
  </links>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="method" style="linklist">
    <title>Methods</title>
  </links>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="function" style="linklist">
    <title>Static Functions</title>
  </links>
  <links type="topic" ui:expanded="true" groups="field" style="linklist">
    <title>Fields</title>
  </links>
  <links type="topic" ui:expanded="true" groups="#first #default #last" style="linklist">
    <title>Other</title>
  </links>
</page>
