<?xml version="1.0"?>
<page id="Cogl.Texture.allocate"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Cogl.Texture" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Cogl.Bool</api:type>
      </api:returns>
      <api:name>cogl_texture_allocate</api:name>
    </api:function>
  </info>
  <title>Cogl.Texture.prototype.allocate</title>
  <synopsis><code mime="text/x-gjs">
function allocate(): <link xref="Cogl.Bool">Cogl.Bool</link> {
    // Gjs wrapper for cogl_texture_allocate()
}
  </code></synopsis>
  <p>Explicitly allocates the storage for the given <code>texture</code> which
allows you to be sure that there is enough memory for the
texture and if not then the error can be handled gracefully.</p>  <p>&lt;note&gt;Normally applications don't need to use this api directly
since the texture will be implicitly allocated when data is set on
the texture, or if the texture is attached to a #CoglOffscreen
framebuffer and rendered too.&lt;/note&gt;</p>

<terms>
<item>
<title><code>Returns</code></title>
  <p><code>true</code> if the texture was successfully allocated,
              otherwise <code>false</code> and @error will be updated if it
              wasn't <code>null</code>.</p>
</item>
</terms>

</page>
