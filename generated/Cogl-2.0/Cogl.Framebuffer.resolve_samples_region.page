<?xml version="1.0"?>
<page id="Cogl.Framebuffer.resolve_samples_region"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Cogl.Framebuffer" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>cogl_framebuffer_resolve_samples_region</api:name>
      <api:arg>
        <api:type>Number(gint)</api:type>
        <api:name>x</api:name>
      </api:arg>
      <api:arg>
        <api:type>Number(gint)</api:type>
        <api:name>y</api:name>
      </api:arg>
      <api:arg>
        <api:type>Number(gint)</api:type>
        <api:name>width</api:name>
      </api:arg>
      <api:arg>
        <api:type>Number(gint)</api:type>
        <api:name>height</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Cogl.Framebuffer.prototype.resolve_samples_region</title>
  <synopsis><code mime="text/x-gjs">
function resolve_samples_region(x: Number(gint), y: Number(gint), width: Number(gint), height: Number(gint)): void {
    // Gjs wrapper for cogl_framebuffer_resolve_samples_region()
}
  </code></synopsis>
  <p>When point sample rendering (also known as multisample rendering)
has been enabled via <link xref="Cogl.Framebuffer.set_samples_per_pixel"/>
then you can optionally call this function (or
<link xref="Cogl.Framebuffer.resolve_samples"/>) to explicitly resolve the point
samples into values for the final color buffer.</p>  <p>Some GPUs will implicitly resolve the point samples during
rendering and so this function is effectively a nop, but with other
architectures it is desirable to defer the resolve step until the
end of the frame.</p>  <p>Use of this API is recommended if incremental, small updates to
a framebuffer are being made because by default Cogl will
implicitly resolve all the point samples of the framebuffer which
can result in redundant work if only a small number of samples have
changed.</p>  <p>Because some GPUs implicitly resolve point samples this function
only guarantees that at-least the region specified will be resolved
and if you have rendered to a larger region then it's possible that
other samples may be implicitly resolved.</p>
  <p>Since 1.8</p>
<terms>
<item>
<title><code>x</code></title>
  <p>top-left x coordinate of region to resolve</p>
</item>
<item>
<title><code>y</code></title>
  <p>top-left y coordinate of region to resolve</p>
</item>
<item>
<title><code>width</code></title>
  <p>width of region to resolve</p>
</item>
<item>
<title><code>height</code></title>
  <p>height of region to resolve</p>
</item>
</terms>

</page>
