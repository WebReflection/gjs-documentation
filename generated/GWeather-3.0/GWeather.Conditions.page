<?xml version="1.0"?>
<page id="GWeather.Conditions"
      type="guide"
      style="class"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="class" type="guide"/>
  </info>
  <title>GWeather.Conditions</title>
  <synopsis><code>
const GWeather = imports.gi.GWeather;

let conditions = new GWeather.Conditions({
    <link xref='GWeather.Conditions-significant'>significant</link>: value
    <link xref='GWeather.Conditions-phenomenon'>phenomenon</link>: value
    <link xref='GWeather.Conditions-qualifier'>qualifier</link>: value
});
  </code></synopsis>
  <p>A convenient way to describe the current or forecast
weather phenomenon, if significant, and its associated
modifier. If the value is not significant, the weather conditions
are described by <link xref="GWeather.Info.get_sky"/> instead.</p>  <p>In general it is discouraged to use this value directly to compute
the forecast icon: applications should instead use
<link xref="GWeather.Info.get_icon_name"/> or
<link xref="GWeather.Info.get_symbolic_icon_name"/>.</p>

  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="constructor" style="linklist">
    <title>Constructors</title>
  </links>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="method" style="linklist">
    <title>Methods</title>
  </links>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="function" style="linklist">
    <title>Static Functions</title>
  </links>
  <links type="topic" ui:expanded="true" groups="field" style="linklist">
    <title>Fields</title>
  </links>
  <links type="topic" ui:expanded="true" groups="#first #default #last" style="linklist">
    <title>Other</title>
  </links>
</page>
