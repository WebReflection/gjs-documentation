<?xml version="1.0"?>
<page id="WebKit2.FaviconDatabase.get_favicon"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="WebKit2.FaviconDatabase" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>webkit_favicon_database_get_favicon</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>page_uri</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.Cancellable</api:type>
        <api:name>cancellable</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.AsyncReadyCallback</api:type>
        <api:name>callback</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>WebKit2.FaviconDatabase.prototype.get_favicon</title>
  <synopsis><code mime="text/x-gjs">
function get_favicon(page_uri: String, cancellable: <link href="../Gio-2.0/Gio.Cancellable.html">Gio.Cancellable</link>, callback: <link href="../Gio-2.0/Gio.AsyncReadyCallback.html">Gio.AsyncReadyCallback</link>): void {
    // Gjs wrapper for webkit_favicon_database_get_favicon()
}
  </code></synopsis>
  <p>Asynchronously obtains a #cairo_surface_t of the favicon for the
given page URI. It returns the cached icon if it's in the database
asynchronously waiting for the icon to be read from the database.</p>  <p>This is an asynchronous method. When the operation is finished, callback will
be invoked. You can then call <link xref="WebKit2.FaviconDatabase.get_favicon_finish"/>
to get the result of the operation.</p>

<terms>
<item>
<title><code>page_uri</code></title>
  <p>URI of the page for which we want to retrieve the favicon</p>
</item>
<item>
<title><code>cancellable</code></title>
  <p>A <link href="../Gio-2.0/Gio.Cancellable.html">Gio.Cancellable</link> or <code>null</code>.</p>
</item>
<item>
<title><code>callback</code></title>
  <p>A <link href="../Gio-2.0/Gio.AsyncReadyCallback.html">Gio.AsyncReadyCallback</link> to call when the request is
           satisfied or <code>null</code> if you don't care about the result.</p>
</item>
</terms>

</page>
