<?xml version="1.0"?>
<page id="Gio.Mount"
      type="guide"
      style="interface"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="interface" type="guide"/>
  </info>
  <title>Gio.Mount</title>
  <synopsis><code>
const Gio = imports.gi.Gio;

let mount = new Gio.Mount();
  </code></synopsis>
  <p>The <link xref="Gio.Mount"/> interface represents user-visible mounts. Note, when
porting from GnomeVFS, <link xref="Gio.Mount"/> is the moral equivalent of #GnomeVFSVolume.</p>  <p><link xref="Gio.Mount"/> is a "mounted" filesystem that you can access. Mounted is in
quotes because it's not the same as a unix mount, it might be a gvfs
mount, but you can still access the files on it if you use GIO. Might or
might not be related to a volume object.</p>  <p>Unmounting a <link xref="Gio.Mount"/> instance is an asynchronous operation. For
more information about asynchronous operations, see <link xref="Gio.AsyncResult"/>
and <link xref="Gio.Task"/>. To unmount a <link xref="Gio.Mount"/> instance, first call
<link xref="Gio.Mount.unmount_with_operation"/> with (at least) the <link xref="Gio.Mount"/> instance and a
<link xref="Gio.AsyncReadyCallback"/>.  The callback will be fired when the
operation has resolved (either with success or failure), and a
#GAsyncReady structure will be passed to the callback.  That
callback should then call <link xref="Gio.Mount.unmount_with_operation_finish"/> with the <link xref="Gio.Mount"/>
and the #GAsyncReady data to see if the operation was completed
successfully.  If an @error is present when <link xref="Gio.Mount.unmount_with_operation_finish"/>
is called, then it will be filled with any error information.</p>

  <synopsis>
    <title>Prerequisites</title>
    <p>Mount requires GObject.Object</p>
  </synopsis>
  <synopsis>
    <title>Known Implementations</title>
    <p>None</p>
  </synopsis>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="constructor" style="linklist">
    <title>Constructors</title>
  </links>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="method" style="linklist">
    <title>Methods</title>
  </links>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="function" style="linklist">
    <title>Static Functions</title>
  </links>
  <links type="topic" ui:expanded="true" groups="property" style="linklist">
    <title>Properties</title>
  </links>
  <links type="topic" ui:expanded="true" groups="signal" style="linklist">
    <title>Signals</title>
  </links>
  <links type="topic" ui:expanded="true" groups="vfunc" style="linklist">
    <title>Virtual functions</title>
  </links>
  <links type="topic" ui:expanded="true" groups="field" style="linklist">
    <title>Fields</title>
  </links>
  <links type="topic" ui:expanded="true" groups="#first #default #last" style="linklist">
    <title>Other</title>
  </links>
</page>
