<?xml version="1.0"?>
<page id="Gio.TlsDatabase.verify_chain"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.TlsDatabase" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Gio.TlsCertificateFlags</api:type>
      </api:returns>
      <api:name>g_tls_database_verify_chain</api:name>
      <api:arg>
        <api:type>Gio.TlsCertificate</api:type>
        <api:name>chain</api:name>
      </api:arg>
      <api:arg>
        <api:type>String</api:type>
        <api:name>purpose</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.SocketConnectable</api:type>
        <api:name>identity</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.TlsInteraction</api:type>
        <api:name>interaction</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.TlsDatabaseVerifyFlags</api:type>
        <api:name>flags</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.Cancellable</api:type>
        <api:name>cancellable</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.TlsDatabase.prototype.verify_chain</title>
  <synopsis><code mime="text/x-gjs">
function verify_chain(chain: Gio.TlsCertificate, purpose: String, identity: Gio.SocketConnectable, interaction: Gio.TlsInteraction, flags: Gio.TlsDatabaseVerifyFlags, cancellable: Gio.Cancellable): Gio.TlsCertificateFlags {
    // Gjs wrapper for g_tls_database_verify_chain()
}
  </code></synopsis>
  <p>Verify's a certificate chain after looking up and adding any missing
certificates to the chain.</p>  <p><code>chain</code> is a chain of <link xref="Gio.TlsCertificate"/> objects each pointing to the next
certificate in the chain by its %issuer property. The chain may initially
consist of one or more certificates. After the verification process is
complete, <code>chain</code> may be modified by adding missing certificates, or removing
extra certificates. If a certificate anchor was found, then it is added to
the <code>chain</code>.</p>  <p><code>purpose</code> describes the purpose (or usage) for which the certificate
is being used. Typically <code>purpose</code> will be set to #G_TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER
which means that the certificate is being used to authenticate a server
(and we are acting as the client).</p>  <p>The <code>identity</code> is used to check for pinned certificates (trust exceptions)
in the database. These will override the normal verification process on a
host by host basis.</p>  <p>Currently there are no <code>flags</code>, and <link xref="Gio.TlsDatabaseVerifyFlags"/>.none should be
used.</p>  <p>This function can block, use <link xref="Gio.verify_chain_async"/> to perform
the verification operation asynchronously.</p>
  <p>Since 2.30</p>
<terms>
<item>
<title><code>chain</code></title>
  <p>a <link xref="Gio.TlsCertificate"/> chain</p>
</item>
<item>
<title><code>purpose</code></title>
  <p>the purpose that this certificate chain will be used for.</p>
</item>
<item>
<title><code>identity</code></title>
  <p>the expected peer identity</p>
</item>
<item>
<title><code>interaction</code></title>
  <p>used to interact with the user if necessary</p>
</item>
<item>
<title><code>flags</code></title>
  <p>additional verify flags</p>
</item>
<item>
<title><code>cancellable</code></title>
  <p>a <link xref="Gio.Cancellable"/>, or <code>null</code></p>
</item>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
