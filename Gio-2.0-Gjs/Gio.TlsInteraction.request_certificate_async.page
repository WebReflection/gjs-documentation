<?xml version="1.0"?>
<page id="Gio.TlsInteraction.request_certificate_async"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.TlsInteraction" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_tls_interaction_request_certificate_async</api:name>
      <api:arg>
        <api:type>Gio.TlsConnection</api:type>
        <api:name>connection</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.TlsCertificateRequestFlags</api:type>
        <api:name>flags</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.Cancellable</api:type>
        <api:name>cancellable</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.AsyncReadyCallback</api:type>
        <api:name>callback</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.TlsInteraction.prototype.request_certificate_async</title>
  <synopsis><code mime="text/x-gjs">
function request_certificate_async(connection: Gio.TlsConnection, flags: Gio.TlsCertificateRequestFlags, cancellable: Gio.Cancellable, callback: Gio.AsyncReadyCallback): void {
    // Gjs wrapper for g_tls_interaction_request_certificate_async()
}
  </code></synopsis>
  <p>Run asynchronous interaction to ask the user for a certificate to use with
the connection. In general, <link xref="Gio.TlsInteraction.invoke_request_certificate"/> should
be used instead of this function.</p>  <p>Derived subclasses usually implement a certificate selector, although they may
also choose to provide a certificate from elsewhere. <code>callback</code> will be called
when the operation completes. Alternatively the user may abort this certificate
request, which will usually abort the TLS connection.</p>
  <p>Since 2.40</p>
<terms>
<item>
<title><code>connection</code></title>
  <p>a <link xref="Gio.TlsConnection"/> object</p>
</item>
<item>
<title><code>flags</code></title>
  <p>flags providing more information about the request</p>
</item>
<item>
<title><code>cancellable</code></title>
  <p>an optional <link xref="Gio.Cancellable"/> cancellation object</p>
</item>
<item>
<title><code>callback</code></title>
  <p>will be called when the interaction completes</p>
</item>
</terms>

</page>
