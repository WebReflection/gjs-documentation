<?xml version="1.0"?>
<page id="Gio.Resource.lookup_data"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.Resource" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>GLib.Bytes</api:type>
      </api:returns>
      <api:name>g_resource_lookup_data</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>path</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.ResourceLookupFlags</api:type>
        <api:name>lookup_flags</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.Resource.prototype.lookup_data</title>
  <synopsis><code mime="text/x-gjs">
function lookup_data(path: String, lookup_flags: Gio.ResourceLookupFlags): GLib.Bytes {
    // Gjs wrapper for g_resource_lookup_data()
}
  </code></synopsis>
  <p>Looks for a file at the specified <code>path</code> in the resource and
returns a <link xref="GLib.Bytes"/> that lets you directly access the data in
memory.</p>  <p>The data is always followed by a zero byte, so you
can safely use the data as a C string. However, that byte
is not included in the size of the GBytes.</p>  <p>For uncompressed resource files this is a pointer directly into
the resource bundle, which is typically in some readonly data section
in the program binary. For compressed files we allocate memory on
the heap and automatically uncompress the data.</p>  <p><code>lookup_flags</code> controls the behaviour of the lookup.</p>
  <p>Since 2.32</p>
<terms>
<item>
<title><code>path</code></title>
  <p>A pathname inside the resource</p>
</item>
<item>
<title><code>lookup_flags</code></title>
  <p>A <link xref="Gio.ResourceLookupFlags"/></p>
</item>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
