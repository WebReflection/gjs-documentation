<?xml version="1.0"?>
<page id="Gio.OutputStream.write_all"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.OutputStream" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_output_stream_write_all</api:name>
      <api:arg>
        <api:type>ByteArray</api:type>
        <api:name>buffer</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.Cancellable</api:type>
        <api:name>cancellable</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.OutputStream.prototype.write_all</title>
  <synopsis><code mime="text/x-gjs">
function write_all(buffer: ByteArray, cancellable: <link xref="Gio.Cancellable">Gio.Cancellable</link>): [ok: Boolean, bytes_written: Number(gsize)] {
    // Gjs wrapper for g_output_stream_write_all()
}
  </code></synopsis>
  <p>Tries to write <code>count</code> bytes from <code>buffer</code> into the stream. Will block
during the operation.</p>  <p>This function is similar to <link xref="Gio.OutputStream.write"/>, except it tries to
write as many bytes as requested, only stopping on an error.</p>  <p>On a successful write of <code>count</code> bytes, <code>true</code> is returned, and <code>bytes_written</code>
is set to <code>count</code>.</p>  <p>If there is an error during the operation <code>false</code> is returned and @error
is set to indicate the error status, <code>bytes_written</code> is updated to contain
the number of bytes written into the stream before the error occurred.</p>

<terms>
<item>
<title><code>buffer</code></title>
  <p>the buffer containing the data to write.</p>
</item>
<item>
<title><code>cancellable</code></title>
  <p>optional <link xref="Gio.Cancellable"/> object, <code>null</code> to ignore.</p>
</item>
<item>
<title><code>ok</code></title>

</item>
<item>
<title><code>bytes_written</code></title>
  <p>location to store the number of bytes that was
    written to the stream</p>
</item>
</terms>

</page>
