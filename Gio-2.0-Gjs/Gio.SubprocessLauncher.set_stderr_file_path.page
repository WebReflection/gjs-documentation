<?xml version="1.0"?>
<page id="Gio.SubprocessLauncher.set_stderr_file_path"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.SubprocessLauncher" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_subprocess_launcher_set_stderr_file_path</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>path</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.SubprocessLauncher.prototype.set_stderr_file_path</title>
  <synopsis><code mime="text/x-gjs">
function set_stderr_file_path(path: String): void {
    // Gjs wrapper for g_subprocess_launcher_set_stderr_file_path()
}
  </code></synopsis>
  <p>Sets the file path to use as the stderr for spawned processes.</p>  <p>If <code>path</code> is <code>null</code> then any previously given path is unset.</p>  <p>The file will be created or truncated when the process is spawned, as
would be the case if using '2&gt;' at the shell.</p>  <p>If you want to send both stdout and stderr to the same file then use
<link xref="Gio.SubprocessFlags"/>.stderr_merge.</p>  <p>You may not set a stderr file path if a stderr fd is already set or
if the launcher flags contain any flags directing stderr elsewhere.</p>  <p>This feature is only available on UNIX.</p>
  <p>Since 2.40</p>
<terms>
<item>
<title><code>path</code></title>
  <p>a filename or <code>null</code></p>
</item>
</terms>

</page>
