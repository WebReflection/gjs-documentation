<?xml version="1.0"?>
<page id="Gio.Socket.send_message"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.Socket" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Number(gssize)</api:type>
      </api:returns>
      <api:name>g_socket_send_message</api:name>
      <api:arg>
        <api:type>Gio.SocketAddress</api:type>
        <api:name>address</api:name>
      </api:arg>
      <api:arg>
        <api:type>Array(Gio.OutputVector)</api:type>
        <api:name>vectors</api:name>
      </api:arg>
      <api:arg>
        <api:type>Array(Gio.SocketControlMessage)</api:type>
        <api:name>messages</api:name>
      </api:arg>
      <api:arg>
        <api:type>Number(gint)</api:type>
        <api:name>flags</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.Cancellable</api:type>
        <api:name>cancellable</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.Socket.prototype.send_message</title>
  <synopsis><code mime="text/x-gjs">
function send_message(address: <link xref="Gio.SocketAddress">Gio.SocketAddress</link>, vectors: Array(<link xref="Gio.OutputVector">Gio.OutputVector</link>), messages: Array(<link xref="Gio.SocketControlMessage">Gio.SocketControlMessage</link>), flags: Number(gint), cancellable: <link xref="Gio.Cancellable">Gio.Cancellable</link>): Number(gssize) {
    // Gjs wrapper for g_socket_send_message()
}
  </code></synopsis>
  <p>Send data to <code>address</code> on <code>socket</code>.  This is the most complicated and
fully-featured version of this call. For easier use, see
<link xref="Gio.Socket.send"/> and <link xref="Gio.send_to"/>.</p>  <p>If <code>address</code> is <code>null</code> then the message is sent to the default receiver
(set by <link xref="Gio.Socket.connect"/>).</p>  <p><code>vectors</code> must point to an array of <link xref="Gio.OutputVector"/> structs and
<code>num_vectors</code> must be the length of this array. (If <code>num_vectors</code> is -1,
then <code>vectors</code> is assumed to be terminated by a <link xref="Gio.OutputVector"/> with a
<code>null</code> buffer pointer.) The <link xref="Gio.OutputVector"/> structs describe the buffers
that the sent data will be gathered from. Using multiple
#GOutputVectors is more memory-efficient than manually copying
data from multiple sources into a single buffer, and more
network-efficient than making multiple calls to <link xref="Gio.Socket.send"/>.</p>  <p><code>messages</code>, if non-<code>null</code>, is taken to point to an array of <code>num_messages</code>
<link xref="Gio.SocketControlMessage"/> instances. These correspond to the control
messages to be sent on the socket.
If <code>num_messages</code> is -1 then <code>messages</code> is treated as a <code>null</code>-terminated
array.</p>  <p><code>flags</code> modify how the message is sent. The commonly available arguments
for this are available in the <link xref="Gio.SocketMsgFlags"/> enum, but the
values there are the same as the system values, and the flags
are passed in as-is, so you can pass in system-specific flags too.</p>  <p>If the socket is in blocking mode the call will block until there is
space for the data in the socket queue. If there is no space available
and the socket is in non-blocking mode a <link xref="Gio.IOErrorEnum"/>.would_block error
will be returned. To be notified when space is available, wait for the
<link xref="GLib.IOCondition"/>.out condition. Note though that you may still receive
<link xref="Gio.IOErrorEnum"/>.would_block from <link xref="Gio.Socket.send"/> even if you were previously
notified of a <link xref="GLib.IOCondition"/>.out condition. (On Windows in particular, this is
very common due to the way the underlying APIs work.)</p>  <p>On error -1 is returned and @error is set accordingly.</p>
  <p>Since 2.22</p>
<terms>
<item>
<title><code>address</code></title>
  <p>a <link xref="Gio.SocketAddress"/>, or <code>null</code></p>
</item>
<item>
<title><code>vectors</code></title>
  <p>an array of <link xref="Gio.OutputVector"/> structs</p>
</item>
<item>
<title><code>messages</code></title>
  <p>a pointer to an
  array of #GSocketControlMessages, or <code>null</code>.</p>
</item>
<item>
<title><code>flags</code></title>
  <p>an int containing <link xref="Gio.SocketMsgFlags"/> flags</p>
</item>
<item>
<title><code>cancellable</code></title>
  <p>a %GCancellable or <code>null</code></p>
</item>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
