<?xml version="1.0"?>
<page id="Gio.DataInputStream.set_newline_type"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.DataInputStream" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_data_input_stream_set_newline_type</api:name>
      <api:arg>
        <api:type>Gio.DataStreamNewlineType</api:type>
        <api:name>type</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.DataInputStream.prototype.set_newline_type</title>
  <synopsis><code mime="text/x-gjs">
function set_newline_type(type: <link xref="Gio.DataStreamNewlineType">Gio.DataStreamNewlineType</link>): void {
    // Gjs wrapper for g_data_input_stream_set_newline_type()
}
  </code></synopsis>
  <p>Sets the newline type for the <code>stream</code>.</p>  <p>Note that using G_DATA_STREAM_NEWLINE_TYPE_ANY is slightly unsafe. If a read
chunk ends in "CR" we must read an additional byte to know if this is "CR" or
"CR LF", and this might block if there is no more data available.</p>

<terms>
<item>
<title><code>type</code></title>
  <p>the type of new line return as <link xref="Gio.DataStreamNewlineType"/>.</p>
</item>
</terms>

</page>
