<?xml version="1.0"?>
<page id="Gio.Credentials"
      type="guide"
      style="class"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="class" type="guide"/>
  </info>
  <title>Gio.Credentials</title>
  <synopsis><code>
const Gio = imports.gi.Gio;

let credentials = new Gio.Credentials();
  </code></synopsis>
  <p>The <link xref="Gio.Credentials"/> type is a reference-counted wrapper for native
credentials. This information is typically used for identifying,
authenticating and authorizing other processes.</p>  <p>Some operating systems supports looking up the credentials of the
remote peer of a communication endpoint - see e.g.
<link xref="Gio.get_credentials"/>.</p>  <p>Some operating systems supports securely sending and receiving
credentials over a Unix Domain Socket, see
<link xref="Gio.UnixCredentialsMessage"/>, <link xref="Gio.send_credentials"/> and
<link xref="Gio.receive_credentials"/> for details.</p>  <p>On Linux, the native credential type is a struct ucred - see the
unix(7) man page for details. This corresponds to
<link xref="Gio.CredentialsType"/>.linux_ucred.</p>  <p>On FreeBSD, Debian GNU/kFreeBSD, and GNU/Hurd, the native
credential type is a struct cmsgcred. This corresponds
to <link xref="Gio.CredentialsType"/>.freebsd_cmsgcred.</p>  <p>On OpenBSD, the native credential type is a struct sockpeercred.
This corresponds to <link xref="Gio.CredentialsType"/>.openbsd_sockpeercred.</p>  <p>On Solaris (including OpenSolaris and its derivatives), the native
credential type is a ucred_t. This corresponds to
<link xref="Gio.CredentialsType"/>.solaris_ucred.</p>
  <p>Since 2.26</p>
  <synopsis>
    <title>Hierarchy</title>
    <tree>
      <item>
        <code>GObject.Object</code>
      <item>
        <code>Gio.Credentials</code>
      </item>
      </item>
    </tree>
  </synopsis>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="constructor" style="linklist">
    <title>Constructors</title>
  </links>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="method" style="linklist">
    <title>Methods</title>
  </links>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="function" style="linklist">
    <title>Static Functions</title>
  </links>
  <links type="topic" ui:expanded="true" groups="property" style="linklist">
    <title>Properties</title>
  </links>
  <links type="topic" ui:expanded="true" groups="signal" style="linklist">
    <title>Signals</title>
  </links>
  <links type="topic" ui:expanded="true" groups="vfunc" style="linklist">
    <title>Virtual functions</title>
  </links>
  <links type="topic" ui:expanded="true" groups="field" style="linklist">
    <title>Fields</title>
  </links>
  <links type="topic" ui:expanded="true" groups="#first #default #last" style="linklist">
    <title>Other</title>
  </links>
</page>
