<?xml version="1.0"?>
<page id="Gio.Settings.get_mapped"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.Settings" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>gpointer</api:type>
      </api:returns>
      <api:name>g_settings_get_mapped</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>key</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.SettingsGetMapping</api:type>
        <api:name>mapping</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.Settings.prototype.get_mapped</title>
  <synopsis><code mime="text/x-gjs">
function get_mapped(key: String, mapping: Gio.SettingsGetMapping): gpointer {
    // Gjs wrapper for g_settings_get_mapped()
}
  </code></synopsis>
  <p>Gets the value that is stored at <code>key</code> in <code>settings</code>, subject to
application-level validation/mapping.</p>  <p>You should use this function when the application needs to perform
some processing on the value of the key (for example, parsing).  The
<code>mapping</code> function performs that processing.  If the function
indicates that the processing was unsuccessful (due to a parse error,
for example) then the mapping is tried again with another value.</p>  <p>This allows a robust 'fall back to defaults' behaviour to be
implemented somewhat automatically.</p>  <p>The first value that is tried is the user's setting for the key.  If
the mapping function fails to map this value, other values may be
tried in an unspecified order (system or site defaults, translated
schema default values, untranslated schema default values, etc).</p>  <p>If the mapping function fails for all possible values, one additional
attempt is made: the mapping function is called with a <code>null</code> value.
If the mapping function still indicates failure at this point then
the application will be aborted.</p>  <p>The result parameter for the <code>mapping</code> function is pointed to a
#gpointer which is initially set to <code>null</code>.  The same pointer is given
to each invocation of <code>mapping</code>.  The final value of that #gpointer is
what is returned by this function.  <code>null</code> is valid; it is returned
just as any other value would be.</p>

<terms>
<item>
<title><code>key</code></title>
  <p>the key to get the value for</p>
</item>
<item>
<title><code>mapping</code></title>
  <p>the function to map the value in the
          settings database to the value used by the application</p>
</item>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
