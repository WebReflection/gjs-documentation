<?xml version="1.0"?>
<page id="Gio.PollableOutputStream-write_nonblocking"
      type="topic"
      style="vfunc"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.PollableOutputStream" group="vfunc" type="guide"/>
  </info>
  <title>Gio.PollableOutputStream::write_nonblocking</title>
  <synopsis><code mime="text/x-gjs">
function vfunc_write_nonblocking(buffer: Array(guint8)): gssize {
}
  </code></synopsis>
  <p>Attempts to write up to <code>count</code> bytes from <code>buffer</code> to <code>stream</code>, as
with <link xref="Gio.OutputStream.write"/>. If <code>stream</code> is not currently writable,
this will immediately return <link xref="Gio.IOErrorEnum"/>.would_block, and you can
use <link xref="Gio.PollableOutputStream.create_source"/> to create a <link xref="GLib.Source"/>
that will be triggered when <code>stream</code> is writable.</p>  <p>Note that since this method never blocks, you cannot actually
use @cancellable to cancel it. However, it will return an error
if @cancellable has already been cancelled when you call, which
may happen if you call this method after a source triggers due
to having been cancelled.</p>

<terms>
<item>
<title><code>buffer</code></title>
  <p>a buffer to write
    data from</p>
</item>
<item>
<title><code>Returns</code></title>
  <p>the number of bytes written, or -1 on error (including
  <link xref="Gio.IOErrorEnum"/>.would_block).</p>
</item>
</terms>

</page>
