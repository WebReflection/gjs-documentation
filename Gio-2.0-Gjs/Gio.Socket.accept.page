<?xml version="1.0"?>
<page id="Gio.Socket.accept"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.Socket" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Gio.Socket</api:type>
      </api:returns>
      <api:name>g_socket_accept</api:name>
      <api:arg>
        <api:type>Gio.Cancellable</api:type>
        <api:name>cancellable</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.Socket.prototype.accept</title>
  <synopsis><code mime="text/x-gjs">
function accept(cancellable: Gio.Cancellable): Gio.Socket {
    // Gjs wrapper for g_socket_accept()
}
  </code></synopsis>
  <p>Accept incoming connections on a connection-based socket. This removes
the first outstanding connection request from the listening socket and
creates a <link xref="Gio.Socket"/> object for it.</p>  <p>The <code>socket</code> must be bound to a local address with <link xref="Gio.bind"/> and
must be listening for incoming connections (<link xref="Gio.listen"/>).</p>  <p>If there are no outstanding connections then the operation will block
or return <link xref="Gio.IOErrorEnum"/>.would_block if non-blocking I/O is enabled.
To be notified of an incoming connection, wait for the <link xref="GLib.IOCondition"/>.in condition.</p>
  <p>Since 2.22</p>
<terms>
<item>
<title><code>cancellable</code></title>
  <p>a %GCancellable or <code>null</code></p>
</item>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
