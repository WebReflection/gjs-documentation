<?xml version="1.0"?>
<page id="Gio.Socket.close"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.Socket" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_socket_close</api:name>
    </api:function>
  </info>
  <title>Gio.Socket.prototype.close</title>
  <synopsis><code mime="text/x-gjs">
function close(): Boolean {
    // Gjs wrapper for g_socket_close()
}
  </code></synopsis>
  <p>Closes the socket, shutting down any active connection.</p>  <p>Closing a socket does not wait for all outstanding I/O operations
to finish, so the caller should not rely on them to be guaranteed
to complete even if the close returns with no error.</p>  <p>Once the socket is closed, all other operations will return
<link xref="Gio.IOErrorEnum"/>.closed. Closing a socket multiple times will not
return an error.</p>  <p>Sockets will be automatically closed when the last reference
is dropped, but you might want to call this function to make sure
resources are released as early as possible.</p>  <p>Beware that due to the way that TCP works, it is possible for
recently-sent data to be lost if either you close a socket while the
<link xref="GLib.IOCondition"/>.in condition is set, or else if the remote connection tries to
send something to you after you close the socket but before it has
finished reading all of the data you sent. There is no easy generic
way to avoid this problem; the easiest fix is to design the network
protocol such that the client will never send data "out of turn".
Another solution is for the server to half-close the connection by
calling <link xref="Gio.Socket.shutdown"/> with only the @shutdown_write flag set,
and then wait for the client to notice this and close its side of the
connection, after which the server can safely call <link xref="Gio.Socket.close"/>.
(This is what <link xref="Gio.TcpConnection"/> does if you call
<link xref="Gio.TcpConnection.set_graceful_disconnect"/>. But of course, this
only works if the client will close its connection after the server
does.)</p>
  <p>Since 2.22</p>
<terms>
<item>
<title><code>ok</code></title>

</item>
</terms>

</page>
