<?xml version="1.0"?>
<page id="Gio.TlsCertificate.new_from_files"
      type="topic"
      style="constructor"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.TlsCertificate" group="constructor" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Gio.TlsCertificate</api:type>
      </api:returns>
      <api:name>g_tls_certificate_new_from_files</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>cert_file</api:name>
      </api:arg>
      <api:arg>
        <api:type>String</api:type>
        <api:name>key_file</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.TlsCertificate.new_from_files</title>
  <synopsis><code mime="text/x-gjs">
function new_from_files(cert_file: String, key_file: String): <link xref="Gio.TlsCertificate">Gio.TlsCertificate</link> {
    // Gjs wrapper for g_tls_certificate_new_from_files()
}
  </code></synopsis>
  <p>Creates a <link xref="Gio.TlsCertificate"/> from the PEM-encoded data in <code>cert_file</code>
and <code>key_file</code>. If either file cannot be read or parsed, the
function will return <code>null</code> and set @error. Otherwise, this behaves
like <link xref="Gio.new_from_pem"/>.</p>
  <p>Since 2.28</p>
<terms>
<item>
<title><code>cert_file</code></title>
  <p>file containing a PEM-encoded certificate to import</p>
</item>
<item>
<title><code>key_file</code></title>
  <p>file containing a PEM-encoded private key to import</p>
</item>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
