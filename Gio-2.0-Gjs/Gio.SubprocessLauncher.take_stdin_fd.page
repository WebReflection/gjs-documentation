<?xml version="1.0"?>
<page id="Gio.SubprocessLauncher.take_stdin_fd"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.SubprocessLauncher" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_subprocess_launcher_take_stdin_fd</api:name>
      <api:arg>
        <api:type>Number</api:type>
        <api:name>fd</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.SubprocessLauncher.prototype.take_stdin_fd</title>
  <synopsis><code mime="text/x-gjs">
function take_stdin_fd(fd: Number): void {
    // Gjs wrapper for g_subprocess_launcher_take_stdin_fd()
}
  </code></synopsis>
  <p>Sets the file descriptor to use as the stdin for spawned processes.</p>  <p>If <code>fd</code> is -1 then any previously given fd is unset.</p>  <p>Note that if your intention is to have the stdin of the calling
process inherited by the child then <link xref="Gio.SubprocessFlags"/>.stdin_inherit
is a better way to go about doing that.</p>  <p>The passed <code>fd</code> is noted but will not be touched in the current
process.  It is therefore necessary that it be kept open by the
caller until the subprocess is spawned.  The file descriptor will
also not be explicitly closed on the child side, so it must be marked
O_CLOEXEC if that's what you want.</p>  <p>You may not set a stdin fd if a stdin file path is already set or if
the launcher flags contain any flags directing stdin elsewhere.</p>  <p>This feature is only available on UNIX.</p>
  <p>Since 2.40</p>
<terms>
<item>
<title><code>fd</code></title>
  <p>a file descriptor, or -1</p>
</item>
</terms>

</page>
