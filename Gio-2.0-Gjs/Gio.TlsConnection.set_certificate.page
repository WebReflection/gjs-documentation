<?xml version="1.0"?>
<page id="Gio.TlsConnection.set_certificate"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.TlsConnection" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_tls_connection_set_certificate</api:name>
      <api:arg>
        <api:type>Gio.TlsCertificate</api:type>
        <api:name>certificate</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.TlsConnection.prototype.set_certificate</title>
  <synopsis><code mime="text/x-gjs">
function set_certificate(certificate: Gio.TlsCertificate): void {
    // Gjs wrapper for g_tls_connection_set_certificate()
}
  </code></synopsis>
  <p>This sets the certificate that <code>conn</code> will present to its peer
during the TLS handshake. For a <link xref="Gio.TlsServerConnection"/>, it is
mandatory to set this, and that will normally be done at construct
time.</p>  <p>For a <link xref="Gio.TlsClientConnection"/>, this is optional. If a handshake fails
with <link xref="Gio.TlsError"/>.certificate_required, that means that the server
requires a certificate, and if you try connecting again, you should
call this method first. You can call
<link xref="Gio.TlsClientConnection.get_accepted_cas"/> on the failed connection
to get a list of Certificate Authorities that the server will
accept certificates from.</p>  <p>(It is also possible that a server will allow the connection with
or without a certificate; in that case, if you don't provide a
certificate, you can tell that the server requested one by the fact
that <link xref="Gio.TlsClientConnection.get_accepted_cas"/> will return
non-<code>null</code>.)</p>
  <p>Since 2.28</p>
<terms>
<item>
<title><code>certificate</code></title>
  <p>the certificate to use for <code>conn</code></p>
</item>
</terms>

</page>
