<?xml version="1.0"?>
<page id="Gio.SubprocessLauncher.take_fd"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.SubprocessLauncher" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_subprocess_launcher_take_fd</api:name>
      <api:arg>
        <api:type>Number</api:type>
        <api:name>source_fd</api:name>
      </api:arg>
      <api:arg>
        <api:type>Number</api:type>
        <api:name>target_fd</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.SubprocessLauncher.prototype.take_fd</title>
  <synopsis><code mime="text/x-gjs">
function take_fd(source_fd: Number, target_fd: Number): void {
    // Gjs wrapper for g_subprocess_launcher_take_fd()
}
  </code></synopsis>
  <p>Transfer an arbitrary file descriptor from parent process to the
child.  This function takes "ownership" of the fd; it will be closed
in the parent when <code>self</code> is freed.</p>  <p>By default, all file descriptors from the parent will be closed.
This function allows you to create (for example) a custom pipe() or
socketpair() before launching the process, and choose the target
descriptor in the child.</p>  <p>An example use case is GNUPG, which has a command line argument
--passphrase-fd providing a file descriptor number where it expects
the passphrase to be written.</p>

<terms>
<item>
<title><code>source_fd</code></title>
  <p>File descriptor in parent process</p>
</item>
<item>
<title><code>target_fd</code></title>
  <p>Target descriptor for child process</p>
</item>
</terms>

</page>
