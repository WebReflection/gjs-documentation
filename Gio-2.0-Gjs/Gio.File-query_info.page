<?xml version="1.0"?>
<page id="Gio.File-query_info"
      type="topic"
      style="vfunc"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.File" group="vfunc" type="guide"/>
  </info>
  <title>Gio.File::query_info</title>
  <synopsis><code mime="text/x-gjs">
function vfunc_query_info(attributes: String, flags: <link xref="Gio.FileQueryInfoFlags">Gio.FileQueryInfoFlags</link>, cancellable: <link xref="Gio.Cancellable">Gio.Cancellable</link>): <link xref="Gio.FileInfo">Gio.FileInfo</link> {
}
  </code></synopsis>
  <p>Gets the requested information about specified <code>file</code>.
The result is a <link xref="Gio.FileInfo"/> object that contains key-value
attributes (such as the type or size of the file).</p>  <p>The <code>attributes</code> value is a string that specifies the file
attributes that should be gathered. It is not an error if
it's not possible to read a particular requested attribute
from a file - it just won't be set. <code>attributes</code> should be a
comma-separated list of attributes or attribute wildcards.
The wildcard "*" means all attributes, and a wildcard like
"standard::*" means all attributes in the standard namespace.
An example attribute query be "standard::*,owner::user".
The standard attributes are available as defines, like
#G_FILE_ATTRIBUTE_STANDARD_NAME.</p>  <p>If <code>cancellable</code> is not <code>null</code>, then the operation can be cancelled
by triggering the cancellable object from another thread. If the
operation was cancelled, the error <link xref="Gio.IOErrorEnum"/>.cancelled will be
returned.</p>  <p>For symlinks, normally the information about the target of the
symlink is returned, rather than information about the symlink
itself. However if you pass #G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS
in <code>flags</code> the information about the symlink itself will be returned.
Also, for symlinks that point to non-existing files the information
about the symlink itself will be returned.</p>  <p>If the file does not exist, the <link xref="Gio.IOErrorEnum"/>.not_found error will be
returned. Other errors are possible too, and depend on what kind of
filesystem the file is on.</p>

<terms>
<item>
<title><code>attributes</code></title>
  <p>an attribute query string</p>
</item>
<item>
<title><code>flags</code></title>
  <p>a set of <link xref="Gio.FileQueryInfoFlags"/></p>
</item>
<item>
<title><code>cancellable</code></title>
  <p>optional <link xref="Gio.Cancellable"/> object,
    <code>null</code> to ignore</p>
</item>
<item>
<title><code>Returns</code></title>
  <p>a <link xref="Gio.FileInfo"/> for the given <code>file</code>, or <code>null</code>
    on error. Free the returned object with <link xref="GObject.unref"/>.</p>
</item>
</terms>

</page>
