<?xml version="1.0"?>
<page id="Gio.File-monitor_dir"
      type="topic"
      style="vfunc"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.File" group="vfunc" type="guide"/>
  </info>
  <title>Gio.File::monitor_dir</title>
  <synopsis><code mime="text/x-gjs">
function vfunc_monitor_dir(flags: <link xref="Gio.FileMonitorFlags">Gio.FileMonitorFlags</link>, cancellable: <link xref="Gio.Cancellable">Gio.Cancellable</link>): <link xref="Gio.FileMonitor">Gio.FileMonitor</link> {
}
  </code></synopsis>
  <p>Obtains a directory monitor for the given file.
This may fail if directory monitoring is not supported.</p>  <p>If <code>cancellable</code> is not <code>null</code>, then the operation can be cancelled by
triggering the cancellable object from another thread. If the operation
was cancelled, the error <link xref="Gio.IOErrorEnum"/>.cancelled will be returned.</p>  <p>It does not make sense for <code>flags</code> to contain
<link xref="Gio.FileMonitorFlags"/>.watch_hard_links, since hard links can not be made to
directories.  It is not possible to monitor all the files in a
directory for changes made via hard links; if you want to do this then
you must register individual watches with <link xref="Gio.File.monitor"/>.</p>

<terms>
<item>
<title><code>flags</code></title>
  <p>a set of <link xref="Gio.FileMonitorFlags"/></p>
</item>
<item>
<title><code>cancellable</code></title>
  <p>optional <link xref="Gio.Cancellable"/> object,
    <code>null</code> to ignore</p>
</item>
<item>
<title><code>Returns</code></title>
  <p>a <link xref="Gio.FileMonitor"/> for the given <code>file</code>,
    or <code>null</code> on error.
    Free the returned object with <link xref="GObject.Object.unref"/>.</p>
</item>
</terms>

</page>
