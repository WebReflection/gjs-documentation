<?xml version="1.0"?>
<page id="Gio.File.replace_contents_async"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.File" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_file_replace_contents_async</api:name>
      <api:arg>
        <api:type>ByteArray</api:type>
        <api:name>contents</api:name>
      </api:arg>
      <api:arg>
        <api:type>String</api:type>
        <api:name>etag</api:name>
      </api:arg>
      <api:arg>
        <api:type>Boolean</api:type>
        <api:name>make_backup</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.FileCreateFlags</api:type>
        <api:name>flags</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.Cancellable</api:type>
        <api:name>cancellable</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.AsyncReadyCallback</api:type>
        <api:name>callback</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.File.prototype.replace_contents_async</title>
  <synopsis><code mime="text/x-gjs">
function replace_contents_async(contents: ByteArray, etag: String, make_backup: Boolean, flags: <link xref="Gio.FileCreateFlags">Gio.FileCreateFlags</link>, cancellable: <link xref="Gio.Cancellable">Gio.Cancellable</link>, callback: <link xref="Gio.AsyncReadyCallback">Gio.AsyncReadyCallback</link>): void {
    // Gjs wrapper for g_file_replace_contents_async()
}
  </code></synopsis>
  <p>Starts an asynchronous replacement of <code>file</code> with the given
<code>contents</code> of <code>length</code> bytes. <code>etag</code> will replace the document's
current entity tag.</p>  <p>When this operation has completed, <code>callback</code> will be called with
@user_user data, and the operation can be finalized with
<link xref="Gio.File.replace_contents_finish"/>.</p>  <p>If <code>cancellable</code> is not <code>null</code>, then the operation can be cancelled by
triggering the cancellable object from another thread. If the operation
was cancelled, the error <link xref="Gio.IOErrorEnum"/>.cancelled will be returned.</p>  <p>If <code>make_backup</code> is <code>true</code>, this function will attempt to
make a backup of <code>file</code>.</p>  <p>Note that no copy of @content will be made, so it must stay valid
until <code>callback</code> is called. See <link xref="Gio.File.replace_contents_bytes_async"/>
for a <link xref="GLib.Bytes"/> version that will automatically hold a reference to the
contents (without copying) for the duration of the call.</p>

<terms>
<item>
<title><code>contents</code></title>
  <p>string of contents to replace the file with</p>
</item>
<item>
<title><code>etag</code></title>
  <p>a new [entity tag][gfile-etag] for the <code>file</code>, or <code>null</code></p>
</item>
<item>
<title><code>make_backup</code></title>
  <p><code>true</code> if a backup should be created</p>
</item>
<item>
<title><code>flags</code></title>
  <p>a set of <link xref="Gio.FileCreateFlags"/></p>
</item>
<item>
<title><code>cancellable</code></title>
  <p>optional <link xref="Gio.Cancellable"/> object, <code>null</code> to ignore</p>
</item>
<item>
<title><code>callback</code></title>
  <p>a <link xref="Gio.AsyncReadyCallback"/> to call when the request is satisfied</p>
</item>
</terms>

</page>
