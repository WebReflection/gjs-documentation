<?xml version="1.0"?>
<page id="Gio.File.create_readwrite"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.File" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Gio.FileIOStream</api:type>
      </api:returns>
      <api:name>g_file_create_readwrite</api:name>
      <api:arg>
        <api:type>Gio.FileCreateFlags</api:type>
        <api:name>flags</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.Cancellable</api:type>
        <api:name>cancellable</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.File.prototype.create_readwrite</title>
  <synopsis><code mime="text/x-gjs">
function create_readwrite(flags: <link xref="Gio.FileCreateFlags">Gio.FileCreateFlags</link>, cancellable: <link xref="Gio.Cancellable">Gio.Cancellable</link>): <link xref="Gio.FileIOStream">Gio.FileIOStream</link> {
    // Gjs wrapper for g_file_create_readwrite()
}
  </code></synopsis>
  <p>Creates a new file and returns a stream for reading and
writing to it. The file must not already exist.</p>  <p>By default files created are generally readable by everyone,
but if you pass #G_FILE_CREATE_PRIVATE in <code>flags</code> the file
will be made readable only to the current user, to the level
that is supported on the target filesystem.</p>  <p>If <code>cancellable</code> is not <code>null</code>, then the operation can be cancelled
by triggering the cancellable object from another thread. If the
operation was cancelled, the error <link xref="Gio.IOErrorEnum"/>.cancelled will be
returned.</p>  <p>If a file or directory with this name already exists, the
<link xref="Gio.IOErrorEnum"/>.exists error will be returned. Some file systems don't
allow all file names, and may return an <link xref="Gio.IOErrorEnum"/>.invalid_filename
error, and if the name is too long, <link xref="Gio.IOErrorEnum"/>.filename_too_long
will be returned. Other errors are possible too, and depend on what
kind of filesystem the file is on.</p>  <p>Note that in many non-local file cases read and write streams are
not supported, so make sure you really need to do read and write
streaming, rather than just opening for reading or writing.</p>
  <p>Since 2.22</p>
<terms>
<item>
<title><code>flags</code></title>
  <p>a set of <link xref="Gio.FileCreateFlags"/></p>
</item>
<item>
<title><code>cancellable</code></title>
  <p>optional <link xref="Gio.Cancellable"/> object,
    <code>null</code> to ignore</p>
</item>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
