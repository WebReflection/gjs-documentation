<?xml version="1.0"?>
<page id="Gio.DBusProxy.set_cached_property"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.DBusProxy" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_dbus_proxy_set_cached_property</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>property_name</api:name>
      </api:arg>
      <api:arg>
        <api:type>GLib.Variant</api:type>
        <api:name>value</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.DBusProxy.prototype.set_cached_property</title>
  <synopsis><code mime="text/x-gjs">
function set_cached_property(property_name: String, value: GLib.Variant): void {
    // Gjs wrapper for g_dbus_proxy_set_cached_property()
}
  </code></synopsis>
  <p>If <code>value</code> is not <code>null</code>, sets the cached value for the property with
name <code>property_name</code> to the value in <code>value</code>.</p>  <p>If <code>value</code> is <code>null</code>, then the cached value is removed from the
property cache.</p>  <p>If <code>proxy</code> has an expected interface (see
<link xref="Gio.g-interface-info"/>) and <code>property_name</code> is referenced by
it, then <code>value</code> is checked against the type of the property.</p>  <p>If the <code>value</code> <link xref="GLib.Variant"/> is floating, it is consumed. This allows
convenient 'inline' use of <link xref="GLib.new"/>, e.g.
|[&lt;!-- language="C" --&gt;
 g_dbus_proxy_set_cached_property (proxy,
                                   "SomeProperty",
                                   g_variant_new ("(si)",
                                                 "A String",
                                                 42));
]|</p>  <p>Normally you will not need to use this method since <code>proxy</code>
is tracking changes using the
`org.freedesktop.DBus.Properties.PropertiesChanged`
D-Bus signal. However, for performance reasons an object may
decide to not use this signal for some properties and instead
use a proprietary out-of-band mechanism to transmit changes.</p>  <p>As a concrete example, consider an object with a property
`ChatroomParticipants` which is an array of strings. Instead of
transmitting the same (long) array every time the property changes,
it is more efficient to only transmit the delta using e.g. signals
`ChatroomParticipantJoined(String name)` and
`ChatroomParticipantParted(String name)`.</p>
  <p>Since 2.26</p>
<terms>
<item>
<title><code>property_name</code></title>
  <p>Property name.</p>
</item>
<item>
<title><code>value</code></title>
  <p>Value for the property or <code>null</code> to remove it from the cache.</p>
</item>
</terms>

</page>
