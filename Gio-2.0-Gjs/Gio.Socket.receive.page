<?xml version="1.0"?>
<page id="Gio.Socket.receive"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.Socket" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Number(gssize)</api:type>
      </api:returns>
      <api:name>g_socket_receive</api:name>
      <api:arg>
        <api:type>ByteArray</api:type>
        <api:name>buffer</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.Cancellable</api:type>
        <api:name>cancellable</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.Socket.prototype.receive</title>
  <synopsis><code mime="text/x-gjs">
function receive(buffer: ByteArray, cancellable: <link xref="Gio.Cancellable">Gio.Cancellable</link>): Number(gssize) {
    // Gjs wrapper for g_socket_receive()
}
  </code></synopsis>
  <p>Receive data (up to <code>size</code> bytes) from a socket. This is mainly used by
connection-oriented sockets; it is identical to <link xref="Gio.Socket.receive_from"/>
with @address set to <code>null</code>.</p>  <p>For <link xref="Gio.SocketType"/>.datagram and <link xref="Gio.SocketType"/>.seqpacket sockets,
<link xref="Gio.Socket.receive"/> will always read either 0 or 1 complete messages from
the socket. If the received message is too large to fit in <code>buffer</code>, then
the data beyond <code>size</code> bytes will be discarded, without any explicit
indication that this has occurred.</p>  <p>For <link xref="Gio.SocketType"/>.stream sockets, <link xref="Gio.Socket.receive"/> can return any
number of bytes, up to <code>size</code>. If more than <code>size</code> bytes have been
received, the additional data will be returned in future calls to
<link xref="Gio.Socket.receive"/>.</p>  <p>If the socket is in blocking mode the call will block until there
is some data to receive, the connection is closed, or there is an
error. If there is no data available and the socket is in
non-blocking mode, a <link xref="Gio.IOErrorEnum"/>.would_block error will be
returned. To be notified when data is available, wait for the
<link xref="GLib.IOCondition"/>.in condition.</p>  <p>On error -1 is returned and @error is set accordingly.</p>
  <p>Since 2.22</p>
<terms>
<item>
<title><code>buffer</code></title>
  <p>a buffer to
    read data into (which should be at least <code>size</code> bytes long).</p>
</item>
<item>
<title><code>cancellable</code></title>
  <p>a %GCancellable or <code>null</code></p>
</item>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
