<?xml version="1.0"?>
<page id="Gio.Action"
      type="guide"
      style="interface"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="interface" type="guide"/>
  </info>
  <title>Gio.Action</title>
  <synopsis><code>
const Gio = imports.gi.Gio;

let action = new Gio.Action({
});
  </code></synopsis>
  <p><link xref="Gio.Action"/> represents a single named action.</p>  <p>The main interface to an action is that it can be activated with
<link xref="Gio.Action.activate"/>.  This results in the 'activate' signal being
emitted.  An activation has a <link xref="GLib.Variant"/> parameter (which may be
<code>null</code>).  The correct type for the parameter is determined by a static
parameter type (which is given at construction time).</p>  <p>An action may optionally have a state, in which case the state may be
set with <link xref="Gio.Action.change_state"/>.  This call takes a <link xref="GLib.Variant"/>.  The
correct type for the state is determined by a static state type
(which is given at construction time).</p>  <p>The state may have a hint associated with it, specifying its valid
range.</p>  <p><link xref="Gio.Action"/> is merely the interface to the concept of an action, as
described above.  Various implementations of actions exist, including
<link xref="Gio.SimpleAction"/>.</p>  <p>In all cases, the implementing class is responsible for storing the
name of the action, the parameter type, the enabled state, the
optional state type and the state and emitting the appropriate
signals when these change.  The implementor responsible for filtering
calls to <link xref="Gio.Action.activate"/> and <link xref="Gio.Action.change_state"/> for type
safety and for the state being enabled.</p>  <p>Probably the only useful thing to do with a <link xref="Gio.Action"/> is to put it
inside of a <link xref="Gio.SimpleActionGroup"/>.</p>

  <synopsis>
    <title>Prerequisites</title>
    <p>Action requires GObject.Object</p>
  </synopsis>
  <synopsis>
    <title>Known Implementations</title>
    <p>Action is implemented by PropertyAction and SimpleAction</p>
  </synopsis>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="constructor" style="linklist">
    <title>Constructors</title>
  </links>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="method" style="linklist">
    <title>Methods</title>
  </links>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="function" style="linklist">
    <title>Static Functions</title>
  </links>
  <links type="topic" ui:expanded="true" groups="property" style="linklist">
    <title>Properties</title>
  </links>
  <links type="topic" ui:expanded="true" groups="signal" style="linklist">
    <title>Signals</title>
  </links>
  <links type="topic" ui:expanded="true" groups="vfunc" style="linklist">
    <title>Virtual functions</title>
  </links>
  <links type="topic" ui:expanded="true" groups="field" style="linklist">
    <title>Fields</title>
  </links>
  <links type="topic" ui:expanded="true" groups="#first #default #last" style="linklist">
    <title>Other</title>
  </links>
</page>
