<?xml version="1.0"?>
<page id="Gio.DBusProxy"
      type="guide"
      style="class"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="class" type="guide"/>
  </info>
  <title>Gio.DBusProxy</title>
  <synopsis><code>
const Gio = imports.gi.Gio;

let dBusProxy = new Gio.DBusProxy({
    <link xref='Gio.DBusProxy-g-bus-type'>g_bus_type</link>: value,
    <link xref='Gio.DBusProxy-g-connection'>g_connection</link>: value,
    <link xref='Gio.DBusProxy-g-default-timeout'>g_default_timeout</link>: value,
    <link xref='Gio.DBusProxy-g-flags'>g_flags</link>: value,
    <link xref='Gio.DBusProxy-g-interface-name'>g_interface_name</link>: value,
    <link xref='Gio.DBusProxy-g-name'>g_name</link>: value,
    <link xref='Gio.DBusProxy-g-object-path'>g_object_path</link>: value,
});
  </code></synopsis>
  <p><link xref="Gio.DBusProxy"/> is a base class used for proxies to access a D-Bus
interface on a remote object. A <link xref="Gio.DBusProxy"/> can be constructed for
both well-known and unique names.</p>  <p>By default, <link xref="Gio.DBusProxy"/> will cache all properties (and listen to
changes) of the remote object, and proxy all signals that gets
emitted. This behaviour can be changed by passing suitable
<link xref="Gio.DBusProxyFlags"/> when the proxy is created. If the proxy is for a
well-known name, the property cache is flushed when the name owner
vanishes and reloaded when a name owner appears.</p>  <p>If a <link xref="Gio.DBusProxy"/> is used for a well-known name, the owner of the
name is tracked and can be read from
<link xref="Gio.DBusProxy-g-name-owner"/>. Connect to the <link xref="GObject.Object-notify"/> signal to
get notified of changes. Additionally, only signals and property
changes emitted from the current name owner are considered and
calls are always sent to the current name owner. This avoids a
number of race conditions when the name is lost by one owner and
claimed by another. However, if no name owner currently exists,
then calls will be sent to the well-known name which may result in
the message bus launching an owner (unless
<link xref="Gio.DBusProxyFlags"/>.do_not_auto_start is set).</p>  <p>The generic <link xref="Gio.DBusProxy-g-properties-changed"/> and
<link xref="Gio.DBusProxy-g-signal"/> signals are not very convenient to work with.
Therefore, the recommended way of working with proxies is to subclass
<link xref="Gio.DBusProxy"/>, and have more natural properties and signals in your derived
class. This [example][gdbus-example-gdbus-codegen] shows how this can
easily be done using the [gdbus-codegen][gdbus-codegen] tool.</p>  <p>A <link xref="Gio.DBusProxy"/> instance can be used from multiple threads but note
that all signals (e.g. <link xref="Gio.DBusProxy-g-signal"/>, <link xref="Gio.DBusProxy-g-properties-changed"/>
and <link xref="GObject.Object-notify"/>) are emitted in the
[thread-default main context][g-main-context-push-thread-default]
of the thread where the instance was constructed.</p>  <p>An example using a proxy for a well-known name can be found in
[gdbus-example-watch-proxy.c](https://git.gnome.org/browse/glib/tree/gio/tests/gdbus-example-watch-proxy.c)</p>
  <p>Since 2.26</p>
  <synopsis>
    <title>Hierarchy</title>
    <tree>
      <item>
        <code>GObject.Object</code>
      <item>
        <code>Gio.DBusProxy</code>
      </item>
      </item>
    </tree>
  </synopsis>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="constructor" style="linklist">
    <title>Constructors</title>
  </links>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="method" style="linklist">
    <title>Methods</title>
  </links>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="function" style="linklist">
    <title>Static Functions</title>
  </links>
  <links type="topic" ui:expanded="true" groups="property" style="linklist">
    <title>Properties</title>
  </links>
  <links type="topic" ui:expanded="true" groups="signal" style="linklist">
    <title>Signals</title>
  </links>
  <links type="topic" ui:expanded="true" groups="vfunc" style="linklist">
    <title>Virtual functions</title>
  </links>
  <links type="topic" ui:expanded="true" groups="field" style="linklist">
    <title>Fields</title>
  </links>
  <links type="topic" ui:expanded="true" groups="#first #default #last" style="linklist">
    <title>Other</title>
  </links>
</page>
