<?xml version="1.0"?>
<page id="GObject.type_ensure"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_type_ensure</api:name>
      <api:arg>
        <api:type>GType</api:type>
        <api:name>type</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GObject.type_ensure</title>
  <synopsis><code mime="text/x-gjs">
function type_ensure(type: GType): void {
    // Gjs wrapper for g_type_ensure()
}
  </code></synopsis>
  <p>Ensures that the indicated <code>type</code> has been registered with the
type system, and its _class_init() method has been run.</p>  <p>In theory, simply calling the type's _get_type() method (or using
the corresponding macro) is supposed take care of this. However,
_get_type() methods are often marked %G_GNUC_CONST for performance
reasons, even though this is technically incorrect (since
%G_GNUC_CONST requires that the function not have side effects,
which _get_type() methods do on the first call). As a result, if
you write a bare call to a _get_type() macro, it may get optimized
out by the compiler. Using <link xref="GObject.type_ensure"/> guarantees that the
type's _get_type() method is called.</p>
  <p>Since 2.34</p>
<terms>
<item>
<title><code>type</code></title>
  <p>a <link xref="GLib.Type"/></p>
</item>
</terms>

</page>
