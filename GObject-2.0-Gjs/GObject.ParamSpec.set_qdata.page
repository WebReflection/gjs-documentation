<?xml version="1.0"?>
<page id="GObject.ParamSpec.set_qdata"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GObject.ParamSpec" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_param_spec_set_qdata</api:name>
      <api:arg>
        <api:type>GLib.Quark</api:type>
        <api:name>quark</api:name>
      </api:arg>
      <api:arg>
        <api:type>gpointer</api:type>
        <api:name>data</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GObject.ParamSpec.prototype.set_qdata</title>
  <synopsis><code mime="text/x-gjs">
function set_qdata(quark: GLib.Quark, data: gpointer): void {
    // Gjs wrapper for g_param_spec_set_qdata()
}
  </code></synopsis>
  <p>Sets an opaque, named pointer on a <link xref="GObject.ParamSpec"/>. The name is
specified through a <link xref="GLib.Quark"/> (retrieved e.g. via
<link xref="GLib.quark_from_static_string"/>), and the pointer can be gotten back
from the <code>pspec</code> with <link xref="GObject.ParamSpec.get_qdata"/>.  Setting a
previously set user data pointer, overrides (frees) the old pointer
set, using <code>null</code> as pointer essentially removes the data stored.</p>

<terms>
<item>
<title><code>quark</code></title>
  <p>a <link xref="GLib.Quark"/>, naming the user data pointer</p>
</item>
<item>
<title><code>data</code></title>
  <p>an opaque user data pointer</p>
</item>
</terms>

</page>
