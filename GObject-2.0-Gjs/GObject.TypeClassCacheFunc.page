<?xml version="1.0"?>
<page id="GObject.TypeClassCacheFunc"
      type="topic"
      style="callback"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="callback" type="guide"/>
  </info>
  <title>GObject.TypeClassCacheFunc</title>
  <synopsis><code mime="text/x-gjs">
function onTypeClassCacheFunc(cache_data: gpointer, g_class: GObject.TypeClass): Boolean {
}
  </code></synopsis>
  <p>A callback function which is called when the reference count of a class
drops to zero. It may use <link xref="GObject.type_class_ref"/> to prevent the class from
being freed. You should not call <link xref="GObject.TypeClass.unref"/> from a
<link xref="GObject.TypeClassCacheFunc"/> function to prevent infinite recursion, use
<link xref="GObject.unref_uncached"/> instead.</p>  <p>The functions have to check the class id passed in to figure
whether they actually want to cache the class of this type, since all
classes are routed through the same <link xref="GObject.TypeClassCacheFunc"/> chain.</p>

<terms>
<item>
<title><code>cache_data</code></title>
  <p>data that was given to the <link xref="GObject.type_add_class_cache_func"/> call</p>
</item>
<item>
<title><code>g_class</code></title>
  <p>The <link xref="GObject.TypeClass"/> structure which is unreferenced</p>
</item>
<item>
<title><code>ok</code></title>

</item>
</terms>

</page>
