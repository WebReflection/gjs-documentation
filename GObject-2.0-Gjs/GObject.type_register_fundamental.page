<?xml version="1.0"?>
<page id="GObject.type_register_fundamental"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>GType</api:type>
      </api:returns>
      <api:name>g_type_register_fundamental</api:name>
      <api:arg>
        <api:type>GType</api:type>
        <api:name>type_id</api:name>
      </api:arg>
      <api:arg>
        <api:type>String</api:type>
        <api:name>type_name</api:name>
      </api:arg>
      <api:arg>
        <api:type>GObject.TypeInfo</api:type>
        <api:name>info</api:name>
      </api:arg>
      <api:arg>
        <api:type>GObject.TypeFundamentalInfo</api:type>
        <api:name>finfo</api:name>
      </api:arg>
      <api:arg>
        <api:type>GObject.TypeFlags</api:type>
        <api:name>flags</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GObject.type_register_fundamental</title>
  <synopsis><code mime="text/x-gjs">
function type_register_fundamental(type_id: GType, type_name: String, info: GObject.TypeInfo, finfo: GObject.TypeFundamentalInfo, flags: GObject.TypeFlags): GType {
    // Gjs wrapper for g_type_register_fundamental()
}
  </code></synopsis>
  <p>Registers <code>type_id</code> as the predefined identifier and <code>type_name</code> as the
name of a fundamental type. If <code>type_id</code> is already registered, or a
type named <code>type_name</code> is already registered, the behaviour is undefined.
The type system uses the information contained in the <link xref="GObject.TypeInfo"/> structure
pointed to by <code>info</code> and the <link xref="GObject.TypeFundamentalInfo"/> structure pointed to by
<code>finfo</code> to manage the type and its instances. The value of <code>flags</code> determines
additional characteristics of the fundamental type.</p>

<terms>
<item>
<title><code>type_id</code></title>
  <p>a predefined type identifier</p>
</item>
<item>
<title><code>type_name</code></title>
  <p>0-terminated string used as the name of the new type</p>
</item>
<item>
<title><code>info</code></title>
  <p><link xref="GObject.TypeInfo"/> structure for this type</p>
</item>
<item>
<title><code>finfo</code></title>
  <p><link xref="GObject.TypeFundamentalInfo"/> structure for this type</p>
</item>
<item>
<title><code>flags</code></title>
  <p>bitwise combination of <link xref="GObject.TypeFlags"/> values</p>
</item>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
