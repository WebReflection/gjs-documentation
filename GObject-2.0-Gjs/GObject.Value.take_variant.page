<?xml version="1.0"?>
<page id="GObject.Value.take_variant"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GObject.Value" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_value_take_variant</api:name>
      <api:arg>
        <api:type>GLib.Variant</api:type>
        <api:name>variant</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GObject.Value.prototype.take_variant</title>
  <synopsis><code mime="text/x-gjs">
function take_variant(variant: <link href="../GLib-2.0/GLib.Variant.page">GLib.Variant</link>): void {
    // Gjs wrapper for g_value_take_variant()
}
  </code></synopsis>
  <p>Set the contents of a variant <link xref="GObject.Value"/> to <code>variant</code>, and takes over
the ownership of the caller's reference to <code>variant</code>;
the caller doesn't have to unref it any more (i.e. the reference
count of the variant is not increased).</p>  <p>If <code>variant</code> was floating then its floating reference is converted to
a hard reference.</p>  <p>If you want the <link xref="GObject.Value"/> to hold its own reference to <code>variant</code>, use
<link xref="GObject.Value.set_variant"/> instead.</p>  <p>This is an internal function introduced mainly for C marshallers.</p>
  <p>Since 2.26</p>
<terms>
<item>
<title><code>variant</code></title>
  <p>a <link xref="GLib.Variant"/>, or <code>null</code></p>
</item>
</terms>

</page>
