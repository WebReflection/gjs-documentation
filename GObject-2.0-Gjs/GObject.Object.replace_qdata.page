<?xml version="1.0"?>
<page id="GObject.Object.replace_qdata"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GObject.Object" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_object_replace_qdata</api:name>
      <api:arg>
        <api:type>GLib.Quark</api:type>
        <api:name>quark</api:name>
      </api:arg>
      <api:arg>
        <api:type>gpointer</api:type>
        <api:name>oldval</api:name>
      </api:arg>
      <api:arg>
        <api:type>gpointer</api:type>
        <api:name>newval</api:name>
      </api:arg>
      <api:arg>
        <api:type>GLib.DestroyNotify</api:type>
        <api:name>destroy</api:name>
      </api:arg>
      <api:arg>
        <api:type>GLib.DestroyNotify</api:type>
        <api:name>old_destroy</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GObject.Object.prototype.replace_qdata</title>
  <synopsis><code mime="text/x-gjs">
function replace_qdata(quark: GLib.Quark, oldval: gpointer, newval: gpointer, destroy: GLib.DestroyNotify, old_destroy: GLib.DestroyNotify): Boolean {
    // Gjs wrapper for g_object_replace_qdata()
}
  </code></synopsis>
  <p>Compares the user data for the key <code>quark</code> on <code>object</code> with
<code>oldval</code>, and if they are the same, replaces <code>oldval</code> with
<code>newval</code>.</p>  <p>This is like a typical atomic compare-and-exchange
operation, for user data on an object.</p>  <p>If the previous value was replaced then ownership of the
old value (<code>oldval</code>) is passed to the caller, including
the registered destroy notify for it (passed out in <code>old_destroy</code>).
Its up to the caller to free this as he wishes, which may
or may not include using <code>old_destroy</code> as sometimes replacement
should not destroy the object in the normal way.</p>
  <p>Since 2.34</p>
<terms>
<item>
<title><code>quark</code></title>
  <p>a <link xref="GLib.Quark"/>, naming the user data pointer</p>
</item>
<item>
<title><code>oldval</code></title>
  <p>the old value to compare against</p>
</item>
<item>
<title><code>newval</code></title>
  <p>the new value</p>
</item>
<item>
<title><code>destroy</code></title>
  <p>a destroy notify for the new value</p>
</item>
<item>
<title><code>old_destroy</code></title>
  <p>destroy notify for the existing value</p>
</item>
<item>
<title><code>ok</code></title>

</item>
</terms>

</page>
