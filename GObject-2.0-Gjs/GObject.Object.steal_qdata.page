<?xml version="1.0"?>
<page id="GObject.Object.steal_qdata"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GObject.Object" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>gpointer</api:type>
      </api:returns>
      <api:name>g_object_steal_qdata</api:name>
      <api:arg>
        <api:type>GLib.Quark</api:type>
        <api:name>quark</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GObject.Object.prototype.steal_qdata</title>
  <synopsis><code mime="text/x-gjs">
function steal_qdata(quark: GLib.Quark): gpointer {
    // Gjs wrapper for g_object_steal_qdata()
}
  </code></synopsis>
  <p>This function gets back user data pointers stored via
<link xref="GObject.set_qdata"/> and removes the @data from object
without invoking its destroy() function (if any was
set).
Usually, calling this function is only required to update
user data pointers with a destroy notifier, for example:
|[&lt;!-- language="C" --&gt;
void
object_add_to_user_list (GObject     *object,
                         const gchar *new_string)
{
  // the quark, naming the object data
  GQuark quark_string_list = g_quark_from_static_string ("my-string-list");
  // retrive the old string list
  GList *list = g_object_steal_qdata (object, quark_string_list);</p>  <p>  // prepend new string
  list = g_list_prepend (list, g_strdup (new_string));
  // this changed 'list', so we need to set it again
  g_object_set_qdata_full (object, quark_string_list, list, free_string_list);
}
static void
free_string_list (gpointer data)
{
  GList *node, *list = data;</p>  <p>  for (node = list; node; node = node-&gt;next)
    g_free (node-&gt;data);
  g_list_free (list);
}
]|
Using <link xref="GObject.Object.get_qdata"/> in the above example, instead of
<link xref="GObject.Object.steal_qdata"/> would have left the destroy function set,
and thus the partial string list would have been freed upon
<link xref="GObject.set_qdata_full"/>.</p>

<terms>
<item>
<title><code>quark</code></title>
  <p>A <link xref="GLib.Quark"/>, naming the user data pointer</p>
</item>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
