<?xml version="1.0"?>
<page id="GObject.Object.get_property"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GObject.Object" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_object_get_property</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>property_name</api:name>
      </api:arg>
      <api:arg>
        <api:type>Any</api:type>
        <api:name>value</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GObject.Object.prototype.get_property</title>
  <synopsis><code mime="text/x-gjs">
function get_property(property_name: String, value: Any): void {
    // Gjs wrapper for g_object_get_property()
}
  </code></synopsis>
  <p>Gets a property of an object. <code>value</code> must have been initialized to the
expected type of the property (or a type to which the expected type can be
transformed) using <link xref="GObject.Value.init"/>.</p>  <p>In general, a copy is made of the property contents and the caller is
responsible for freeing the memory by calling <link xref="GObject.Value.unset"/>.</p>  <p>Note that <link xref="GObject.Object.get_property"/> is really intended for language
bindings, <link xref="GObject.Object.get"/> is much more convenient for C programming.</p>

<terms>
<item>
<title><code>property_name</code></title>
  <p>the name of the property to get</p>
</item>
<item>
<title><code>value</code></title>
  <p>return location for the property value</p>
</item>
</terms>

</page>
