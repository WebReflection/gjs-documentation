<?xml version="1.0"?>
<page id="GObject.TypeModule.add_interface"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GObject.TypeModule" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_type_module_add_interface</api:name>
      <api:arg>
        <api:type>GObject.Type</api:type>
        <api:name>instance_type</api:name>
      </api:arg>
      <api:arg>
        <api:type>GObject.Type</api:type>
        <api:name>interface_type</api:name>
      </api:arg>
      <api:arg>
        <api:type>GObject.InterfaceInfo</api:type>
        <api:name>interface_info</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GObject.TypeModule.prototype.add_interface</title>
  <synopsis><code mime="text/x-gjs">
function add_interface(instance_type: GObject.Type, interface_type: GObject.Type, interface_info: <link xref="GObject.InterfaceInfo">GObject.InterfaceInfo</link>): void {
    // Gjs wrapper for g_type_module_add_interface()
}
  </code></synopsis>
  <p>Registers an additional interface for a type, whose interface lives
in the given type plugin. If the interface was already registered
for the type in this plugin, nothing will be done.</p>  <p>As long as any instances of the type exist, the type plugin will
not be unloaded.</p>

<terms>
<item>
<title><code>instance_type</code></title>
  <p>type to which to add the interface.</p>
</item>
<item>
<title><code>interface_type</code></title>
  <p>interface type to add</p>
</item>
<item>
<title><code>interface_info</code></title>
  <p>type information structure</p>
</item>
</terms>

</page>
