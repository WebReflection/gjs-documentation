<?xml version="1.0"?>
<page id="GLib.SpawnFlags"
      type="guide"
      style="enum"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="enum" type="guide"/>
  </info>
  <title>GLib.SpawnFlags</title>
  <p>Flags passed to <link xref="GLib.spawn_sync"/>, <link xref="GLib.spawn_async"/> and <link xref="GLib.spawn_async_with_pipes"/>.</p>

<terms>
<item>
<title><code>SpawnFlags.DEFAULT</code></title>
  <p>no flags, default behaviour</p>
</item>
<item>
<title><code>SpawnFlags.LEAVE_DESCRIPTORS_OPEN</code></title>
  <p>the parent's open file descriptors will be
  inherited by the child; otherwise all descriptors except stdin/stdout/stderr
  will be closed before calling exec() in the child.</p>
</item>
<item>
<title><code>SpawnFlags.DO_NOT_REAP_CHILD</code></title>
  <p>the child will not be automatically reaped; you
  must use <link xref="GLib.child_watch_add"/> yourself (or call waitpid()
  or handle &lt;literal&gt;SIGCHLD&lt;/literal&gt; yourself), or the child will become a zombie.</p>
</item>
<item>
<title><code>SpawnFlags.SEARCH_PATH</code></title>
  <p>&lt;literal&gt;argv[0]&lt;/literal&gt; need not be an absolute path,
  it will be looked for in the user's &lt;envar&gt;PATH&lt;/envar&gt;.</p>
</item>
<item>
<title><code>SpawnFlags.STDOUT_TO_DEV_NULL</code></title>
  <p>the child's standard output will be discarded,
  instead of going to the same location as the parent's standard output.</p>
</item>
<item>
<title><code>SpawnFlags.STDERR_TO_DEV_NULL</code></title>
  <p>the child's standard error will be discarded.</p>
</item>
<item>
<title><code>SpawnFlags.CHILD_INHERITS_STDIN</code></title>
  <p>the child will inherit the parent's standard
  input (by default, the child's standard input is attached to
  &lt;filename&gt;/dev/null&lt;/filename&gt;).</p>
</item>
<item>
<title><code>SpawnFlags.FILE_AND_ARGV_ZERO</code></title>
  <p>the first element of &lt;literal&gt;argv&lt;/literal&gt; is
  the file to execute, while the remaining elements are the actual argument
  vector to pass to the file. Normally <link xref="GLib.spawn_async_with_pipes"/> uses
  &lt;literal&gt;argv[0]&lt;/literal&gt; as the file to execute, and passes all of
  &lt;literal&gt;argv&lt;/literal&gt; to the child.</p>
</item>
<item>
<title><code>SpawnFlags.SEARCH_PATH_FROM_ENVP</code></title>
  <p>if &lt;literal&gt;argv[0]&lt;/literal&gt; is not an abolute path,
  it will be looked for in the &lt;envar&gt;PATH&lt;/envar&gt; from the passed child
  environment. Since: 2.34</p>
</item>
<item>
<title><code>SpawnFlags.CLOEXEC_PIPES</code></title>
  <p>create all pipes with the O_CLOEXEC flag set.
  Since: 2.40.</p>
</item>
</terms>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="function" style="linklist">
    <title>Functions</title>
  </links>
</page>
