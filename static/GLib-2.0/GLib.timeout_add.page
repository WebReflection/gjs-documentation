<?xml version="1.0"?>
<page id="GLib.timeout_add"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Number(guint)</api:type>
      </api:returns>
      <api:name>g_timeout_add_full</api:name>
      <api:arg>
        <api:type>Number(gint)</api:type>
        <api:name>priority</api:name>
      </api:arg>
      <api:arg>
        <api:type>Number(guint)</api:type>
        <api:name>interval</api:name>
      </api:arg>
      <api:arg>
        <api:type>GLib.SourceFunc</api:type>
        <api:name>function</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.timeout_add</title>
  <synopsis><code mime="text/x-gjs">
function timeout_add(priority: Number(gint), interval: Number(guint), function: <link xref="GLib.SourceFunc">GLib.SourceFunc</link>): Number(guint) {
    // Gjs wrapper for g_timeout_add_full()
}
  </code></synopsis>
  <p>Sets a function to be called at regular intervals, with the given
priority.  The function is called repeatedly until it returns
<code>false</code>, at which point the timeout is automatically destroyed and
the function will not be called again.  The <code>notify</code> function is
called when the timeout is destroyed.  The first call to the
function will be at the end of the first <code>interval</code>.</p>  <p>Note that timeout functions may be delayed, due to the processing of other
event sources. Thus they should not be relied on for precise timing.
After each call to the timeout function, the time of the next
timeout is recalculated based on the current time and the given interval
(it does not try to 'catch up' time lost in delays).</p>  <p>This internally creates a main loop source using <link xref="GLib.timeout_source_new"/>
and attaches it to the main loop context using <link xref="GLib.Source.attach"/>. You can
do these steps manually if you need greater control.</p>  <p>The interval given in terms of monotonic time, not wall clock time.
See <link xref="GLib.get_monotonic_time"/>.</p>

<terms>
<item>
<title><code>priority</code></title>
  <p>the priority of the timeout source. Typically this will be in
           the range between #G_PRIORITY_DEFAULT and #G_PRIORITY_HIGH.</p>
</item>
<item>
<title><code>interval</code></title>
  <p>the time between calls to the function, in milliseconds
            (1/1000ths of a second)</p>
</item>
<item>
<title><code>function</code></title>
  <p>function to call</p>
</item>
<item>
<title><code>Returns</code></title>
  <p>the ID (greater than 0) of the event source.</p>
</item>
</terms>

</page>
