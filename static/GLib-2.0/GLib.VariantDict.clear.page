<?xml version="1.0"?>
<page id="GLib.VariantDict.clear"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GLib.VariantDict" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_variant_dict_clear</api:name>
    </api:function>
  </info>
  <title>GLib.VariantDict.prototype.clear</title>
  <synopsis><code mime="text/x-gjs">
function clear(): void {
    // Gjs wrapper for g_variant_dict_clear()
}
  </code></synopsis>
  <p>Releases all memory associated with a <link xref="GLib.VariantDict"/> without freeing
the <link xref="GLib.VariantDict"/> structure itself.</p>  <p>It typically only makes sense to do this on a stack-allocated
<link xref="GLib.VariantDict"/> if you want to abort building the value part-way
through.  This function need not be called if you call
<link xref="GLib.VariantDict.end"/> and it also doesn't need to be called on dicts
allocated with g_variant_dict_new (see <link xref="GLib.VariantDict.unref"/> for
that).</p>  <p>It is valid to call this function on either an initialised
<link xref="GLib.VariantDict"/> or one that was previously cleared by an earlier call
to <link xref="GLib.VariantDict.clear"/> but it is not valid to call this function
on uninitialised memory.</p>
  <p>Since 2.40</p>

</page>
