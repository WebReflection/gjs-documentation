<?xml version="1.0"?>
<page id="GLib.BookmarkFile.add_application"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GLib.BookmarkFile" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_bookmark_file_add_application</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>uri</api:name>
      </api:arg>
      <api:arg>
        <api:type>String</api:type>
        <api:name>name</api:name>
      </api:arg>
      <api:arg>
        <api:type>String</api:type>
        <api:name>exec</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.BookmarkFile.prototype.add_application</title>
  <synopsis><code mime="text/x-gjs">
function add_application(uri: String, name: String, exec: String): void {
    // Gjs wrapper for g_bookmark_file_add_application()
}
  </code></synopsis>
  <p>Adds the application with <code>name</code> and <code>exec</code> to the list of
applications that have registered a bookmark for <code>uri</code> into
<code>bookmark</code>.</p>  <p>Every bookmark inside a <link xref="GLib.BookmarkFile"/> must have at least an
application registered.  Each application must provide a name, a
command line useful for launching the bookmark, the number of times
the bookmark has been registered by the application and the last
time the application registered this bookmark.</p>  <p>If <code>name</code> is <code>null</code>, the name of the application will be the
same returned by <link xref="GLib.get_application_name"/>; if <code>exec</code> is <code>null</code>, the
command line will be a composition of the program name as
returned by <link xref="GLib.get_prgname"/> and the "\%u" modifier, which will be
expanded to the bookmark's URI.</p>  <p>This function will automatically take care of updating the
registrations count and timestamping in case an application
with the same <code>name</code> had already registered a bookmark for
<code>uri</code> inside <code>bookmark</code>.</p>  <p>If no bookmark for <code>uri</code> is found, one is created.</p>
  <p>Since 2.12</p>
<terms>
<item>
<title><code>uri</code></title>
  <p>a valid URI</p>
</item>
<item>
<title><code>name</code></title>
  <p>the name of the application registering the bookmark
  or <code>null</code></p>
</item>
<item>
<title><code>exec</code></title>
  <p>command line to be used to launch the bookmark or <code>null</code></p>
</item>
</terms>

</page>
