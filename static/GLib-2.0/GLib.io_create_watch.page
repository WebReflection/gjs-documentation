<?xml version="1.0"?>
<page id="GLib.io_create_watch"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>GLib.Source</api:type>
      </api:returns>
      <api:name>g_io_create_watch</api:name>
      <api:arg>
        <api:type>GLib.IOChannel</api:type>
        <api:name>channel</api:name>
      </api:arg>
      <api:arg>
        <api:type>GLib.IOCondition</api:type>
        <api:name>condition</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.io_create_watch</title>
  <synopsis><code mime="text/x-gjs">
function io_create_watch(channel: <link xref="GLib.IOChannel">GLib.IOChannel</link>, condition: <link xref="GLib.IOCondition">GLib.IOCondition</link>): <link xref="GLib.Source">GLib.Source</link> {
    // Gjs wrapper for g_io_create_watch()
}
  </code></synopsis>
  <p>Creates a <link xref="GLib.Source"/> that's dispatched when <code>condition</code> is met for the
given <code>channel</code>. For example, if condition is #G_IO_IN, the source will
be dispatched when there's data available for reading.</p>  <p><link xref="GLib.io_add_watch"/> is a simpler interface to this same functionality, for
the case where you want to add the source to the default main loop context
at the default priority.</p>  <p>On Windows, polling a <link xref="GLib.Source"/> created to watch a channel for a socket
puts the socket in non-blocking mode. This is a side-effect of the
implementation and unavoidable.</p>

<terms>
<item>
<title><code>channel</code></title>
  <p>a <link xref="GLib.IOChannel"/> to watch</p>
</item>
<item>
<title><code>condition</code></title>
  <p>conditions to watch for</p>
</item>
<item>
<title><code>Returns</code></title>
  <p>a new <link xref="GLib.Source"/></p>
</item>
</terms>

</page>
