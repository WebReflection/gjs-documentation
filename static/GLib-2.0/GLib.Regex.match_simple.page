<?xml version="1.0"?>
<page id="GLib.Regex.match_simple"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GLib.Regex" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_regex_match_simple</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>pattern</api:name>
      </api:arg>
      <api:arg>
        <api:type>String</api:type>
        <api:name>string</api:name>
      </api:arg>
      <api:arg>
        <api:type>GLib.RegexCompileFlags</api:type>
        <api:name>compile_options</api:name>
      </api:arg>
      <api:arg>
        <api:type>GLib.RegexMatchFlags</api:type>
        <api:name>match_options</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.Regex.match_simple</title>
  <synopsis><code mime="text/x-gjs">
function match_simple(pattern: String, string: String, compile_options: <link xref="GLib.RegexCompileFlags">GLib.RegexCompileFlags</link>, match_options: <link xref="GLib.RegexMatchFlags">GLib.RegexMatchFlags</link>): Boolean {
    // Gjs wrapper for g_regex_match_simple()
}
  </code></synopsis>
  <p>Scans for a match in <code>string</code> for <code>pattern</code>.</p>  <p>This function is equivalent to <link xref="GLib.Regex.match"/> but it does not
require to compile the pattern with <link xref="GLib.Regex.new"/>, avoiding some
lines of code when you need just to do a match without extracting
substrings, capture counts, and so on.</p>  <p>If this function is to be called on the same <code>pattern</code> more than
once, it's more efficient to compile the pattern once with
<link xref="GLib.Regex.new"/> and then use <link xref="GLib.Regex.match"/>.</p>
  <p>Since 2.14</p>
<terms>
<item>
<title><code>pattern</code></title>
  <p>the regular expression</p>
</item>
<item>
<title><code>string</code></title>
  <p>the string to scan for matches</p>
</item>
<item>
<title><code>compile_options</code></title>
  <p>compile options for the regular expression, or 0</p>
</item>
<item>
<title><code>match_options</code></title>
  <p>match options, or 0</p>
</item>
<item>
<title><code>Returns</code></title>
  <p><code>true</code> if the string matched, <code>false</code> otherwise</p>
</item>
</terms>

</page>
