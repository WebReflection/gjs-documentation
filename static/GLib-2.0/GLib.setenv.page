<?xml version="1.0"?>
<page id="GLib.setenv"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_setenv</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>variable</api:name>
      </api:arg>
      <api:arg>
        <api:type>String</api:type>
        <api:name>value</api:name>
      </api:arg>
      <api:arg>
        <api:type>Boolean</api:type>
        <api:name>overwrite</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.setenv</title>
  <synopsis><code mime="text/x-gjs">
function setenv(variable: String, value: String, overwrite: Boolean): Boolean {
    // Gjs wrapper for g_setenv()
}
  </code></synopsis>
  <p>Sets an environment variable. Both the variable's name and value
should be in the GLib file name encoding. On UNIX, this means that
they can be arbitrary byte strings. On Windows, they should be in
UTF-8.</p>  <p>Note that on some systems, when variables are overwritten, the memory
used for the previous variables and its value isn't reclaimed.</p>  <p>You should be mindful fo the fact that environment variable handling
in UNIX is not thread-safe, and your program may crash if one thread
calls <link xref="GLib.setenv"/> while another thread is calling getenv(). (And note
that many functions, such as gettext(), call getenv() internally.)
This function is only safe to use at the very start of your program,
before creating any other threads (or creating objects that create
worker threads of their own).</p>  <p>If you need to set up the environment for a child process, you can
use <link xref="GLib.get_environ"/> to get an environment array, modify that with
<link xref="GLib.environ_setenv"/> and <link xref="GLib.environ_unsetenv"/>, and then pass that
array directly to execvpe(), <link xref="GLib.spawn_async"/>, or the like.</p>
  <p>Since 2.4</p>
<terms>
<item>
<title><code>variable</code></title>
  <p>the environment variable to set, must not contain '='.</p>
</item>
<item>
<title><code>value</code></title>
  <p>the value for to set the variable to.</p>
</item>
<item>
<title><code>overwrite</code></title>
  <p>whether to change the variable if it already exists.</p>
</item>
<item>
<title><code>ok</code></title>

</item>
</terms>

</page>
