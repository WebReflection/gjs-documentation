<?xml version="1.0"?>
<page id="GLib.on_error_query"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_on_error_query</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>prg_name</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.on_error_query</title>
  <synopsis><code mime="text/x-gjs">
function on_error_query(prg_name: String): void {
    // Gjs wrapper for g_on_error_query()
}
  </code></synopsis>
  <p>Prompts the user with
`[E]xit, [H]alt, show [S]tack trace or [P]roceed`.
This function is intended to be used for debugging use only.
The following example shows how it can be used together with
the <link xref="GLib.log"/> functions.</p>  <p>|[&lt;!-- language="C" --&gt;
#include &lt;glib.h&gt;</p>  <p>static void
log_handler (const gchar   *log_domain,
             GLogLevelFlags log_level,
             const gchar   *message,
             gpointer       user_data)
{
  g_log_default_handler (log_domain, log_level, message, user_data);</p>  <p>  g_on_error_query (MY_PROGRAM_NAME);
}</p>  <p>int
main (int argc, char *argv[])
{
  g_log_set_handler (MY_LOG_DOMAIN,
                     G_LOG_LEVEL_WARNING |
                     G_LOG_LEVEL_ERROR |
                     G_LOG_LEVEL_CRITICAL,
                     log_handler,
                     NULL);
  ...
]|</p>  <p>If "[E]xit" is selected, the application terminates with a call
to _exit(0).</p>  <p>If "[S]tack" trace is selected, <link xref="GLib.on_error_stack_trace"/> is called.
This invokes gdb, which attaches to the current process and shows
a stack trace. The prompt is then shown again.</p>  <p>If "[P]roceed" is selected, the function returns.</p>  <p>This function may cause different actions on non-UNIX platforms.</p>

<terms>
<item>
<title><code>prg_name</code></title>
  <p>the program name, needed by gdb for the "[S]tack trace"
    option. If <code>prg_name</code> is <code>null</code>, <link xref="GLib.get_prgname"/> is called to get
    the program name (which will work correctly if gdk_init() or
    gtk_init() has been called)</p>
</item>
</terms>

</page>
