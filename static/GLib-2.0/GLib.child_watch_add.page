<?xml version="1.0"?>
<page id="GLib.child_watch_add"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Number(guint)</api:type>
      </api:returns>
      <api:name>g_child_watch_add_full</api:name>
      <api:arg>
        <api:type>Number(gint)</api:type>
        <api:name>priority</api:name>
      </api:arg>
      <api:arg>
        <api:type>GLib.Pid</api:type>
        <api:name>pid</api:name>
      </api:arg>
      <api:arg>
        <api:type>GLib.ChildWatchFunc</api:type>
        <api:name>function</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.child_watch_add</title>
  <synopsis><code mime="text/x-gjs">
function child_watch_add(priority: Number(gint), pid: <link xref="GLib.Pid">GLib.Pid</link>, function: <link xref="GLib.ChildWatchFunc">GLib.ChildWatchFunc</link>): Number(guint) {
    // Gjs wrapper for g_child_watch_add_full()
}
  </code></synopsis>
  <p>Sets a function to be called when the child indicated by <code>pid</code>
exits, at the priority <code>priority</code>.</p>  <p>If you obtain <code>pid</code> from <link xref="GLib.spawn_async"/> or <link xref="GLib.spawn_async_with_pipes"/>
you will need to pass #G_SPAWN_DO_NOT_REAP_CHILD as flag to
the spawn function for the child watching to work.</p>  <p>In many programs, you will want to call <link xref="GLib.spawn_check_exit_status"/>
in the callback to determine whether or not the child exited
successfully.</p>  <p>Also, note that on platforms where <link xref="GLib.Pid"/> must be explicitly closed
(see <link xref="GLib.spawn_close_pid"/>) <code>pid</code> must not be closed while the source
is still active.  Typically, you should invoke <link xref="GLib.spawn_close_pid"/>
in the callback function for the source.</p>  <p>GLib supports only a single callback per process id.</p>  <p>This internally creates a main loop source using
<link xref="GLib.child_watch_source_new"/> and attaches it to the main loop context
using <link xref="GLib.Source.attach"/>. You can do these steps manually if you
need greater control.</p>
  <p>Since 2.4</p>
<terms>
<item>
<title><code>priority</code></title>
  <p>the priority of the idle source. Typically this will be in the
           range between #G_PRIORITY_DEFAULT_IDLE and #G_PRIORITY_HIGH_IDLE.</p>
</item>
<item>
<title><code>pid</code></title>
  <p>process to watch. On POSIX the positive pid of a child process. On
Windows a handle for a process (which doesn't have to be a child).</p>
</item>
<item>
<title><code>function</code></title>
  <p>function to call</p>
</item>
<item>
<title><code>Returns</code></title>
  <p>the ID (greater than 0) of the event source.</p>
</item>
</terms>

</page>
