<?xml version="1.0"?>
<page id="GLib.uri_unescape_string"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>String</api:type>
      </api:returns>
      <api:name>g_uri_unescape_string</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>escaped_string</api:name>
      </api:arg>
      <api:arg>
        <api:type>String</api:type>
        <api:name>illegal_characters</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.uri_unescape_string</title>
  <synopsis><code mime="text/x-gjs">
function uri_unescape_string(escaped_string: String, illegal_characters: String): String {
    // Gjs wrapper for g_uri_unescape_string()
}
  </code></synopsis>
  <p>Unescapes a whole escaped string.</p>  <p>If any of the characters in <code>illegal_characters</code> or the character zero appears
as an escaped character in <code>escaped_string</code> then that is an error and <code>null</code>
will be returned. This is useful it you want to avoid for instance having a
slash being expanded in an escaped path element, which might confuse pathname
handling.</p>
  <p>Since 2.16</p>
<terms>
<item>
<title><code>escaped_string</code></title>
  <p>an escaped string to be unescaped.</p>
</item>
<item>
<title><code>illegal_characters</code></title>
  <p>a string of illegal characters not to be
     allowed, or <code>null</code>.</p>
</item>
<item>
<title><code>Returns</code></title>
  <p>an unescaped version of <code>escaped_string</code>. The returned string
should be freed when no longer needed.</p>
</item>
</terms>

</page>
