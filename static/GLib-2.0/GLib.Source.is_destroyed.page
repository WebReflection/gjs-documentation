<?xml version="1.0"?>
<page id="GLib.Source.is_destroyed"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GLib.Source" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_source_is_destroyed</api:name>
    </api:function>
  </info>
  <title>GLib.Source.prototype.is_destroyed</title>
  <synopsis><code mime="text/x-gjs">
function is_destroyed(): Boolean {
    // Gjs wrapper for g_source_is_destroyed()
}
  </code></synopsis>
  <p>Returns whether <code>source</code> has been destroyed.</p>  <p>This is important when you operate upon your objects
from within idle handlers, but may have freed the object
before the dispatch of your idle handler.</p>  <p>|[&lt;!-- language="C" --&gt;
static gboolean
idle_callback (gpointer data)
{
  SomeWidget *self = data;
   
  GDK_THREADS_ENTER ();
  // do stuff with self
  self-&gt;idle_id = 0;
  GDK_THREADS_LEAVE ();
   
  return G_SOURCE_REMOVE;
}
 
static void
some_widget_do_stuff_later (SomeWidget *self)
{
  self-&gt;idle_id = g_idle_add (idle_callback, self);
}
 
static void
some_widget_finalize (GObject *object)
{
  SomeWidget *self = SOME_WIDGET (object);
   
  if (self-&gt;idle_id)
    g_source_remove (self-&gt;idle_id);
   
  G_OBJECT_CLASS (parent_class)-&gt;finalize (object);
}
]|</p>  <p>This will fail in a multi-threaded application if the
widget is destroyed before the idle handler fires due
to the use after free in the callback. A solution, to
this particular problem, is to check to if the source
has already been destroy within the callback.</p>  <p>|[&lt;!-- language="C" --&gt;
static gboolean
idle_callback (gpointer data)
{
  SomeWidget *self = data;
  
  GDK_THREADS_ENTER ();
  if (!g_source_is_destroyed (g_main_current_source ()))
    {
      // do stuff with self
    }
  GDK_THREADS_LEAVE ();
  
  return FALSE;
}
]|</p>
  <p>Since 2.12</p>
<terms>
<item>
<title><code>ok</code></title>
  <p><code>true</code> if the source has been destroyed</p>
</item>
</terms>

</page>
