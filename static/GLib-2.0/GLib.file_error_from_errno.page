<?xml version="1.0"?>
<page id="GLib.file_error_from_errno"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>GLib.FileError</api:type>
      </api:returns>
      <api:name>g_file_error_from_errno</api:name>
      <api:arg>
        <api:type>Number(gint)</api:type>
        <api:name>err_no</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.file_error_from_errno</title>
  <synopsis><code mime="text/x-gjs">
function file_error_from_errno(err_no: Number(gint)): <link xref="GLib.FileError">GLib.FileError</link> {
    // Gjs wrapper for g_file_error_from_errno()
}
  </code></synopsis>
  <p>Gets a <link xref="GLib.FileError"/> constant based on the passed-in <code>err_no</code>.
For example, if you pass in `EEXIST` this function returns
#G_FILE_ERROR_EXIST. Unlike `errno` values, you can portably
assume that all <link xref="GLib.FileError"/> values will exist.</p>  <p>Normally a <link xref="GLib.FileError"/> value goes into a <link xref="GLib.Error"/> returned
from a function that manipulates files. So you would use
<link xref="GLib.file_error_from_errno"/> when constructing a <link xref="GLib.Error"/>.</p>

<terms>
<item>
<title><code>err_no</code></title>
  <p>an "errno" value</p>
</item>
<item>
<title><code>Returns</code></title>
  <p><link xref="GLib.FileError"/> corresponding to the given @errno</p>
</item>
</terms>

</page>
