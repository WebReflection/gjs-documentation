<?xml version="1.0"?>
<page id="GLib.MainContext.wait"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GLib.MainContext" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_main_context_wait</api:name>
      <api:arg>
        <api:type>GLib.Cond</api:type>
        <api:name>cond</api:name>
      </api:arg>
      <api:arg>
        <api:type>GLib.Mutex</api:type>
        <api:name>mutex</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.MainContext.prototype.wait</title>
  <synopsis><code mime="text/x-gjs">
function wait(cond: <link xref="GLib.Cond">GLib.Cond</link>, mutex: <link xref="GLib.Mutex">GLib.Mutex</link>): Boolean {
    // Gjs wrapper for g_main_context_wait()
}
  </code></synopsis>
  <p>Tries to become the owner of the specified context,
as with <link xref="GLib.MainContext.acquire"/>. But if another thread
is the owner, atomically drop <code>mutex</code> and wait on <code>cond</code> until
that owner releases ownership or until <code>cond</code> is signaled, then
try again (once) to become the owner.</p>

<terms>
<item>
<title><code>cond</code></title>
  <p>a condition variable</p>
</item>
<item>
<title><code>mutex</code></title>
  <p>a mutex, currently held</p>
</item>
<item>
<title><code>ok</code></title>
  <p><code>true</code> if the operation succeeded, and
  this thread is now the owner of <code>context</code>.</p>
</item>
</terms>

</page>
