<?xml version="1.0"?>
<page id="Gio.File.has_prefix"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.File" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_file_has_prefix</api:name>
      <api:arg>
        <api:type>Gio.File</api:type>
        <api:name>prefix</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.File.prototype.has_prefix</title>
  <synopsis><code mime="text/x-gjs">
function has_prefix(prefix: <link xref="Gio.File">Gio.File</link>): Boolean {
    // Gjs wrapper for g_file_has_prefix()
}
  </code></synopsis>
  <p>Checks whether <code>file</code> has the prefix specified by <code>prefix</code>.</p>  <p>In other words, if the names of initial elements of <code>file</code>'s
pathname match <code>prefix</code>. Only full pathname elements are matched,
so a path like /foo is not considered a prefix of /foobar, only
of /foo/bar.</p>  <p>This call does no I/O, as it works purely on names. As such it can
sometimes return <code>false</code> even if <code>file</code> is inside a <code>prefix</code> (from a
filesystem point of view), because the prefix of <code>file</code> is an alias
of <code>prefix</code>.</p>

<terms>
<item>
<title><code>prefix</code></title>
  <p>input <link xref="Gio.File"/></p>
</item>
<item>
<title><code>ok</code></title>
  <p><code>true</code> if the @files's parent, grandparent, etc is <code>prefix</code>,
    <code>false</code> otherwise.</p>
</item>
</terms>

</page>
