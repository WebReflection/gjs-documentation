<?xml version="1.0"?>
<page id="Gio.IOSchedulerJob.send_to_mainloop"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.IOSchedulerJob" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_io_scheduler_job_send_to_mainloop</api:name>
      <api:arg>
        <api:type>GLib.SourceFunc</api:type>
        <api:name>func</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.IOSchedulerJob.prototype.send_to_mainloop</title>
  <synopsis><code mime="text/x-gjs">
function send_to_mainloop(func: <link href="../GLib-2.0/GLib.SourceFunc.html">GLib.SourceFunc</link>): Boolean {
    // Gjs wrapper for g_io_scheduler_job_send_to_mainloop()
}
  </code></synopsis>
  <p>Used from an I/O job to send a callback to be run in the thread
that the job was started from, waiting for the result (and thus
blocking the I/O job).</p>

<terms>
<item>
<title><code>func</code></title>
  <p>a <link href="../GLib-2.0/GLib.SourceFunc.html">GLib.SourceFunc</link> callback that will be called in the original thread</p>
</item>
<item>
<title><code>Returns</code></title>
  <p>The return value of <code>func</code></p>
</item>
</terms>

</page>
