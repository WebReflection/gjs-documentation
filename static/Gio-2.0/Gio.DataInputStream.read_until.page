<?xml version="1.0"?>
<page id="Gio.DataInputStream.read_until"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.DataInputStream" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>String</api:type>
      </api:returns>
      <api:name>g_data_input_stream_read_until</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>stop_chars</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.Cancellable</api:type>
        <api:name>cancellable</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.DataInputStream.prototype.read_until</title>
  <synopsis><code mime="text/x-gjs">
function read_until(stop_chars: String, cancellable: <link xref="Gio.Cancellable">Gio.Cancellable</link>): [return_value: String, length: Number(gsize)] {
    // Gjs wrapper for g_data_input_stream_read_until()
}
  </code></synopsis>
  <p>Reads a string from the data input stream, up to the first
occurrence of any of the stop characters.</p>  <p>Note that, in contrast to <link xref="Gio.DataInputStream.read_until_async"/>,
this function consumes the stop character that it finds.</p>  <p>Don't use this function in new code.  Its functionality is
inconsistent with <link xref="Gio.DataInputStream.read_until_async"/>.  Both
functions will be marked as deprecated in a future release.  Use
<link xref="Gio.DataInputStream.read_upto"/> instead, but note that that function
does not consume the stop character.</p>

<terms>
<item>
<title><code>stop_chars</code></title>
  <p>characters to terminate the read.</p>
</item>
<item>
<title><code>cancellable</code></title>
  <p>optional <link xref="Gio.Cancellable"/> object, <code>null</code> to ignore.</p>
</item>
<item>
<title><code>return_value</code></title>
  <p>a string with the data that was read
    before encountering any of the stop characters. Set <code>length</code> to
    a #gsize to get the length of the string. This function will
    return <code>null</code> on an error.</p>
</item>
<item>
<title><code>length</code></title>
  <p>a #gsize to get the length of the data read in.</p>
</item>
</terms>

</page>
