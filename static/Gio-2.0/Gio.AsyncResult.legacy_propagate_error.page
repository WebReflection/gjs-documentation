<?xml version="1.0"?>
<page id="Gio.AsyncResult.legacy_propagate_error"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.AsyncResult" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_async_result_legacy_propagate_error</api:name>
    </api:function>
  </info>
  <title>Gio.AsyncResult.prototype.legacy_propagate_error</title>
  <synopsis><code mime="text/x-gjs">
function legacy_propagate_error(): Boolean {
    // Gjs wrapper for g_async_result_legacy_propagate_error()
}
  </code></synopsis>
  <p>If <code>res</code> is a <link xref="Gio.SimpleAsyncResult"/>, this is equivalent to
<link xref="Gio.SimpleAsyncResult.propagate_error"/>. Otherwise it returns
<code>false</code>.</p>  <p>This can be used for legacy error handling in async *_finish()
wrapper functions that traditionally handled <link xref="Gio.SimpleAsyncResult"/>
error returns themselves rather than calling into the virtual method.
This should not be used in new code; <link xref="Gio.AsyncResult"/> errors that are
set by virtual methods should also be extracted by virtual methods,
to enable subclasses to chain up correctly.</p>
  <p>Since 2.34</p>
<terms>
<item>
<title><code>ok</code></title>

</item>
</terms>

</page>
