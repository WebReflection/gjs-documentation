<?xml version="1.0"?>
<page id="Gio.File.query_exists"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.File" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_file_query_exists</api:name>
      <api:arg>
        <api:type>Gio.Cancellable</api:type>
        <api:name>cancellable</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.File.prototype.query_exists</title>
  <synopsis><code mime="text/x-gjs">
function query_exists(cancellable: <link xref="Gio.Cancellable">Gio.Cancellable</link>): Boolean {
    // Gjs wrapper for g_file_query_exists()
}
  </code></synopsis>
  <p>Utility function to check if a particular file exists. This is
implemented using <link xref="Gio.File.query_info"/> and as such does blocking I/O.</p>  <p>Note that in many cases it is racy to first check for file existence
and then execute something based on the outcome of that, because the
file might have been created or removed in between the operations. The
general approach to handling that is to not check, but just do the
operation and handle the errors as they come.</p>  <p>As an example of race-free checking, take the case of reading a file,
and if it doesn't exist, creating it. There are two racy versions: read
it, and on error create it; and: check if it exists, if not create it.
These can both result in two processes creating the file (with perhaps
a partially written file as the result). The correct approach is to
always try to create the file with <link xref="Gio.File.create"/> which will either
atomically create the file or fail with a <link xref="Gio.IOErrorEnum"/>.exists error.</p>  <p>However, in many cases an existence check is useful in a user interface,
for instance to make a menu item sensitive/insensitive, so that you don't
have to fool users that something is possible and then just show an error
dialog. If you do this, you should make sure to also handle the errors
that can happen due to races when you execute the operation.</p>

<terms>
<item>
<title><code>cancellable</code></title>
  <p>optional <link xref="Gio.Cancellable"/> object,
    <code>null</code> to ignore</p>
</item>
<item>
<title><code>Returns</code></title>
  <p><code>true</code> if the file exists (and can be detected without error),
    <code>false</code> otherwise (or if cancelled).</p>
</item>
</terms>

</page>
