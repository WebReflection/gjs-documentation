<?xml version="1.0"?>
<page id="Gio.FileEnumerator.next_files_async"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.FileEnumerator" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_file_enumerator_next_files_async</api:name>
      <api:arg>
        <api:type>Number(gint)</api:type>
        <api:name>num_files</api:name>
      </api:arg>
      <api:arg>
        <api:type>Number(gint)</api:type>
        <api:name>io_priority</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.Cancellable</api:type>
        <api:name>cancellable</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.AsyncReadyCallback</api:type>
        <api:name>callback</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.FileEnumerator.prototype.next_files_async</title>
  <synopsis><code mime="text/x-gjs">
function next_files_async(num_files: Number(gint), io_priority: Number(gint), cancellable: <link xref="Gio.Cancellable">Gio.Cancellable</link>, callback: <link xref="Gio.AsyncReadyCallback">Gio.AsyncReadyCallback</link>): void {
    // Gjs wrapper for g_file_enumerator_next_files_async()
}
  </code></synopsis>
  <p>Request information for a number of files from the enumerator asynchronously.
When all i/o for the operation is finished the <code>callback</code> will be called with
the requested information.</p>  <p>See the documentation of <link xref="Gio.FileEnumerator"/> for information about the
order of returned files.</p>  <p>The callback can be called with less than <code>num_files</code> files in case of error
or at the end of the enumerator. In case of a partial error the callback will
be called with any succeeding items and no error, and on the next request the
error will be reported. If a request is cancelled the callback will be called
with <link xref="Gio.IOErrorEnum"/>.cancelled.</p>  <p>During an async request no other sync and async calls are allowed, and will
result in <link xref="Gio.IOErrorEnum"/>.pending errors.</p>  <p>Any outstanding i/o request with higher priority (lower numerical value) will
be executed before an outstanding request with lower priority. Default
priority is %G_PRIORITY_DEFAULT.</p>

<terms>
<item>
<title><code>num_files</code></title>
  <p>the number of file info objects to request</p>
</item>
<item>
<title><code>io_priority</code></title>
  <p>the [I/O priority][io-priority] of the request</p>
</item>
<item>
<title><code>cancellable</code></title>
  <p>optional <link xref="Gio.Cancellable"/> object, <code>null</code> to ignore.</p>
</item>
<item>
<title><code>callback</code></title>
  <p>a <link xref="Gio.AsyncReadyCallback"/> to call when the request is satisfied</p>
</item>
</terms>

</page>
