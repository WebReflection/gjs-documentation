<?xml version="1.0"?>
<page id="Gio.Socket.shutdown"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.Socket" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_socket_shutdown</api:name>
      <api:arg>
        <api:type>Boolean</api:type>
        <api:name>shutdown_read</api:name>
      </api:arg>
      <api:arg>
        <api:type>Boolean</api:type>
        <api:name>shutdown_write</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.Socket.prototype.shutdown</title>
  <synopsis><code mime="text/x-gjs">
function shutdown(shutdown_read: Boolean, shutdown_write: Boolean): Boolean {
    // Gjs wrapper for g_socket_shutdown()
}
  </code></synopsis>
  <p>Shut down part of a full-duplex connection.</p>  <p>If <code>shutdown_read</code> is <code>true</code> then the receiving side of the connection
is shut down, and further reading is disallowed.</p>  <p>If <code>shutdown_write</code> is <code>true</code> then the sending side of the connection
is shut down, and further writing is disallowed.</p>  <p>It is allowed for both <code>shutdown_read</code> and <code>shutdown_write</code> to be <code>true</code>.</p>  <p>One example where this is used is graceful disconnect for TCP connections
where you close the sending side, then wait for the other side to close
the connection, thus ensuring that the other side saw all sent data.</p>
  <p>Since 2.22</p>
<terms>
<item>
<title><code>shutdown_read</code></title>
  <p>whether to shut down the read side</p>
</item>
<item>
<title><code>shutdown_write</code></title>
  <p>whether to shut down the write side</p>
</item>
<item>
<title><code>ok</code></title>
  <p><code>true</code> on success, <code>false</code> on error</p>
</item>
</terms>

</page>
