<?xml version="1.0"?>
<page id="Gio.Action.parse_detailed_name"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.Action" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_action_parse_detailed_name</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>detailed_name</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.Action.parse_detailed_name</title>
  <synopsis><code mime="text/x-gjs">
function parse_detailed_name(detailed_name: String): [ok: Boolean, action_name: String, target_value: <link href="../GLib-2.0/GLib.Variant.html">GLib.Variant</link>] {
    // Gjs wrapper for g_action_parse_detailed_name()
}
  </code></synopsis>
  <p>Parses a detailed action name into its separate name and target
components.</p>  <p>Detailed action names can have three formats.</p>  <p>The first format is used to represent an action name with no target
value and consists of just an action name containing no whitespace
nor the characters ':', '(' or ')'.  For example: "app.action".</p>  <p>The second format is used to represent an action with a target value
that is a non-empty string consisting only of alphanumerics, plus '-'
and '.'.  In that case, the action name and target value are
separated by a double colon ("::").  For example:
"app.action::target".</p>  <p>The third format is used to represent an action with any type of
target value, including strings.  The target value follows the action
name, surrounded in parens.  For example: "app.action(42)".  The
target value is parsed using <link href="../GLib-2.0/GLib.variant_parse.html">GLib.variant_parse</link>.  If a tuple-typed
value is desired, it must be specified in the same way, resulting in
two sets of parens, for example: "app.action((1,2,3))".  A string
target can be specified this way as well: "app.action('target')".
For strings, this third format must be used if * target value is
empty or contains characters other than alphanumerics, '-' and '.'.</p>
  <p>Since 2.38</p>
<terms>
<item>
<title><code>detailed_name</code></title>
  <p>a detailed action name</p>
</item>
<item>
<title><code>ok</code></title>
  <p><code>true</code> if successful, else <code>false</code> with @error set</p>
</item>
<item>
<title><code>action_name</code></title>
  <p>the action name</p>
</item>
<item>
<title><code>target_value</code></title>
  <p>the target value, or <code>null</code> for no target</p>
</item>
</terms>

</page>
