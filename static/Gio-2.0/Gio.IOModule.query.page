<?xml version="1.0"?>
<page id="Gio.IOModule.query"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.IOModule" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Array(String)</api:type>
      </api:returns>
      <api:name>g_io_module_query</api:name>
    </api:function>
  </info>
  <title>Gio.IOModule.query</title>
  <synopsis><code mime="text/x-gjs">
function query(): Array(String) {
    // Gjs wrapper for g_io_module_query()
}
  </code></synopsis>
  <p>Optional API for GIO modules to implement.</p>  <p>Should return a list of all the extension points that may be
implemented in this module.</p>  <p>This method will not be called in normal use, however it may be
called when probing existing modules and recording which extension
points that this model is used for. This means we won't have to
load and initialize this module unless its needed.</p>  <p>If this function is not implemented by the module the module will
always be loaded, initialized and then unloaded on application
startup so that it can register its extension points during init.</p>  <p>Note that a module need not actually implement all the extension
points that <link xref="Gio.IOModule.query"/> returns, since the exact list of
extension may depend on runtime issues. However all extension
points actually implemented must be returned by <link xref="Gio.IOModule.query"/>
(if defined).</p>  <p>When installing a module that implements <link xref="Gio.IOModule.query"/> you must
run gio-querymodules in order to build the cache files required for
lazy loading.</p>
  <p>Since 2.24</p>
<terms>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
