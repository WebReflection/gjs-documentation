<?xml version="1.0"?>
<page id="Gio.File.move"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.File" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_file_move</api:name>
      <api:arg>
        <api:type>Gio.File</api:type>
        <api:name>destination</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.FileCopyFlags</api:type>
        <api:name>flags</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.Cancellable</api:type>
        <api:name>cancellable</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.FileProgressCallback</api:type>
        <api:name>progress_callback</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.File.prototype.move</title>
  <synopsis><code mime="text/x-gjs">
function move(destination: <link xref="Gio.File">Gio.File</link>, flags: <link xref="Gio.FileCopyFlags">Gio.FileCopyFlags</link>, cancellable: <link xref="Gio.Cancellable">Gio.Cancellable</link>, progress_callback: <link xref="Gio.FileProgressCallback">Gio.FileProgressCallback</link>): Boolean {
    // Gjs wrapper for g_file_move()
}
  </code></synopsis>
  <p>Tries to move the file or directory <code>source</code> to the location specified
by <code>destination</code>. If native move operations are supported then this is
used, otherwise a copy + delete fallback is used. The native
implementation may support moving directories (for instance on moves
inside the same filesystem), but the fallback code does not.</p>  <p>If the flag #G_FILE_COPY_OVERWRITE is specified an already
existing <code>destination</code> file is overwritten.</p>  <p>If the flag #G_FILE_COPY_NOFOLLOW_SYMLINKS is specified then symlinks
will be copied as symlinks, otherwise the target of the
<code>source</code> symlink will be copied.</p>  <p>If <code>cancellable</code> is not <code>null</code>, then the operation can be cancelled by
triggering the cancellable object from another thread. If the operation
was cancelled, the error <link xref="Gio.IOErrorEnum"/>.cancelled will be returned.</p>  <p>If <code>progress_callback</code> is not <code>null</code>, then the operation can be monitored
by setting this to a <link xref="Gio.FileProgressCallback"/> function.
<code>progress_callback_data</code> will be passed to this function. It is
guaranteed that this callback will be called after all data has been
transferred with the total number of bytes copied during the operation.</p>  <p>If the <code>source</code> file does not exist, then the <link xref="Gio.IOErrorEnum"/>.not_found
error is returned, independent on the status of the <code>destination</code>.</p>  <p>If #G_FILE_COPY_OVERWRITE is not specified and the target exists,
then the error <link xref="Gio.IOErrorEnum"/>.exists is returned.</p>  <p>If trying to overwrite a file over a directory, the <link xref="Gio.IOErrorEnum"/>.is_directory
error is returned. If trying to overwrite a directory with a directory the
<link xref="Gio.IOErrorEnum"/>.would_merge error is returned.</p>  <p>If the source is a directory and the target does not exist, or
#G_FILE_COPY_OVERWRITE is specified and the target is a file, then
the <link xref="Gio.IOErrorEnum"/>.would_recurse error may be returned (if the native
move operation isn't available).</p>

<terms>
<item>
<title><code>destination</code></title>
  <p><link xref="Gio.File"/> pointing to the destination location</p>
</item>
<item>
<title><code>flags</code></title>
  <p>set of <link xref="Gio.FileCopyFlags"/></p>
</item>
<item>
<title><code>cancellable</code></title>
  <p>optional <link xref="Gio.Cancellable"/> object,
    <code>null</code> to ignore</p>
</item>
<item>
<title><code>progress_callback</code></title>
  <p><link xref="Gio.FileProgressCallback"/>
    function for updates</p>
</item>
<item>
<title><code>ok</code></title>
  <p><code>true</code> on successful move, <code>false</code> otherwise.</p>
</item>
</terms>

</page>
