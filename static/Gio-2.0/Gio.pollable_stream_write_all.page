<?xml version="1.0"?>
<page id="Gio.pollable_stream_write_all"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_pollable_stream_write_all</api:name>
      <api:arg>
        <api:type>Gio.OutputStream</api:type>
        <api:name>stream</api:name>
      </api:arg>
      <api:arg>
        <api:type>ByteArray</api:type>
        <api:name>buffer</api:name>
      </api:arg>
      <api:arg>
        <api:type>Boolean</api:type>
        <api:name>blocking</api:name>
      </api:arg>
      <api:arg>
        <api:type>Gio.Cancellable</api:type>
        <api:name>cancellable</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.pollable_stream_write_all</title>
  <synopsis><code mime="text/x-gjs">
function pollable_stream_write_all(stream: <link xref="Gio.OutputStream">Gio.OutputStream</link>, buffer: ByteArray, blocking: Boolean, cancellable: <link xref="Gio.Cancellable">Gio.Cancellable</link>): [ok: Boolean, bytes_written: Number(gsize)] {
    // Gjs wrapper for g_pollable_stream_write_all()
}
  </code></synopsis>
  <p>Tries to write <code>count</code> bytes to <code>stream</code>, as with
<link xref="Gio.OutputStream.write_all"/>, but using <link xref="Gio.pollable_stream_write"/>
rather than <link xref="Gio.OutputStream.write"/>.</p>  <p>On a successful write of <code>count</code> bytes, <code>true</code> is returned, and
<code>bytes_written</code> is set to <code>count</code>.</p>  <p>If there is an error during the operation (including
<link xref="Gio.IOErrorEnum"/>.would_block in the non-blocking case), <code>false</code> is
returned and @error is set to indicate the error status,
<code>bytes_written</code> is updated to contain the number of bytes written
into the stream before the error occurred.</p>  <p>As with <link xref="Gio.pollable_stream_write"/>, if <code>blocking</code> is <code>false</code>, then
<code>stream</code> must be a <link xref="Gio.PollableOutputStream"/> for which
<link xref="Gio.PollableOutputStream.can_poll"/> returns <code>true</code> or else the
behavior is undefined. If <code>blocking</code> is <code>true</code>, then <code>stream</code> does not
need to be a <link xref="Gio.PollableOutputStream"/>.</p>
  <p>Since 2.34</p>
<terms>
<item>
<title><code>stream</code></title>
  <p>a <link xref="Gio.OutputStream"/>.</p>
</item>
<item>
<title><code>buffer</code></title>
  <p>the buffer
  containing the data to write.</p>
</item>
<item>
<title><code>blocking</code></title>
  <p>whether to do blocking I/O</p>
</item>
<item>
<title><code>cancellable</code></title>
  <p>optional <link xref="Gio.Cancellable"/> object, <code>null</code> to ignore.</p>
</item>
<item>
<title><code>ok</code></title>

</item>
<item>
<title><code>bytes_written</code></title>
  <p>location to store the number of bytes that was
  written to the stream</p>
</item>
</terms>

</page>
