<?xml version="1.0"?>
<page id="Gio.File.get_child_for_display_name"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.File" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Gio.File</api:type>
      </api:returns>
      <api:name>g_file_get_child_for_display_name</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>display_name</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>Gio.File.prototype.get_child_for_display_name</title>
  <synopsis><code mime="text/x-gjs">
function get_child_for_display_name(display_name: String): <link xref="Gio.File">Gio.File</link> {
    // Gjs wrapper for g_file_get_child_for_display_name()
}
  </code></synopsis>
  <p>Gets the child of <code>file</code> for a given <code>display_name</code> (i.e. a UTF-8
version of the name). If this function fails, it returns <code>null</code>
and @error will be set. This is very useful when constructing a
<link xref="Gio.File"/> for a new file and the user entered the filename in the
user interface, for instance when you select a directory and
type a filename in the file selector.</p>  <p>This call does no blocking I/O.</p>

<terms>
<item>
<title><code>display_name</code></title>
  <p>string to a possible child</p>
</item>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
