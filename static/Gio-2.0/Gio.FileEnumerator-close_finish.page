<?xml version="1.0"?>
<page id="Gio.FileEnumerator-close_finish"
      type="topic"
      style="vfunc"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="Gio.FileEnumerator" group="vfunc" type="guide"/>
  </info>
  <title>Gio.FileEnumerator::close_finish</title>
  <synopsis><code mime="text/x-gjs">
function vfunc_close_finish(result: <link xref="Gio.AsyncResult">Gio.AsyncResult</link>): Boolean {
}
  </code></synopsis>
  <p>Finishes closing a file enumerator, started from <link xref="Gio.FileEnumerator.close_async"/>.</p>  <p>If the file enumerator was already closed when <link xref="Gio.FileEnumerator.close_async"/>
was called, then this function will report <link xref="Gio.IOErrorEnum"/>.closed in @error, and
return <code>false</code>. If the file enumerator had pending operation when the close
operation was started, then this function will report <link xref="Gio.IOErrorEnum"/>.pending, and
return <code>false</code>.  If @cancellable was not <code>null</code>, then the operation may have been
cancelled by triggering the cancellable object from another thread. If the operation
was cancelled, the error <link xref="Gio.IOErrorEnum"/>.cancelled will be set, and <code>false</code> will be
returned.</p>

<terms>
<item>
<title><code>result</code></title>
  <p>a <link xref="Gio.AsyncResult"/>.</p>
</item>
<item>
<title><code>Returns</code></title>
  <p><code>true</code> if the close operation has finished successfully.</p>
</item>
</terms>

</page>
