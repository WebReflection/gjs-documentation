<?xml version="1.0"?>
<page id="GLib.strstr_len"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>String</api:type>
      </api:returns>
      <api:name>g_strstr_len</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>haystack</api:name>
      </api:arg>
      <api:arg>
        <api:type>Number(gssize)</api:type>
        <api:name>haystack_len</api:name>
      </api:arg>
      <api:arg>
        <api:type>String</api:type>
        <api:name>needle</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.strstr_len</title>
  <synopsis><code mime="text/x-gjs">
function strstr_len(haystack: String, haystack_len: Number(gssize), needle: String): String {
    // Gjs wrapper for g_strstr_len()
}
  </code></synopsis>
  <p>Searches the string <code>haystack</code> for the first occurrence
of the string <code>needle</code>, limiting the length of the search
to <code>haystack_len</code>.</p>

<terms>
<item>
<title><code>haystack</code></title>
  <p>a string</p>
</item>
<item>
<title><code>haystack_len</code></title>
  <p>the maximum length of <code>haystack</code>. Note that -1 is
    a valid length, if <code>haystack</code> is nul-terminated, meaning it will
    search through the whole string.</p>
</item>
<item>
<title><code>needle</code></title>
  <p>the string to search for</p>
</item>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
