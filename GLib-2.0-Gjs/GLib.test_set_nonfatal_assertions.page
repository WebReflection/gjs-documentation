<?xml version="1.0"?>
<page id="GLib.test_set_nonfatal_assertions"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_test_set_nonfatal_assertions</api:name>
    </api:function>
  </info>
  <title>GLib.test_set_nonfatal_assertions</title>
  <synopsis><code mime="text/x-gjs">
function test_set_nonfatal_assertions(): void {
    // Gjs wrapper for g_test_set_nonfatal_assertions()
}
  </code></synopsis>
  <p>Changes the behaviour of g_assert_cmpstr(), g_assert_cmpint(),
g_assert_cmpuint(), g_assert_cmphex(), g_assert_cmpfloat(),
g_assert_true(), g_assert_false(), g_assert_null(), g_assert_no_error(),
g_assert_error(), g_test_assert_expected_messages() and the various
g_test_trap_assert_*() macros to not abort to program, but instead
call <link xref="GLib.test_fail"/> and continue. (This also changes the behavior of
<link xref="GLib.test_fail"/> so that it will not cause the test program to abort
after completing the failed test.)</p>  <p>Note that the g_assert_not_reached() and g_assert() are not
affected by this.</p>  <p>This function can only be called after <link xref="GLib.test_init"/>.</p>
  <p>Since 2.38</p>

</page>
