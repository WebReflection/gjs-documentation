<?xml version="1.0"?>
<page id="GLib.Once.init_enter"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GLib.Once" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_once_init_enter</api:name>
      <api:arg>
        <api:type>void</api:type>
        <api:name>location</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.Once.init_enter</title>
  <synopsis><code mime="text/x-gjs">
function init_enter(location: void): Boolean {
    // Gjs wrapper for g_once_init_enter()
}
  </code></synopsis>
  <p>Function to be called when starting a critical initialization
section. The argument <code>location</code> must point to a static
0-initialized variable that will be set to a value other than 0 at
the end of the initialization section. In combination with
<link xref="GLib.once_init_leave"/> and the unique address @value_location, it can
be ensured that an initialization section will be executed only once
during a program's life time, and that concurrent threads are
blocked until initialization completed. To be used in constructs
like this:</p>  <p>|[&lt;!-- language="C" --&gt;
  static gsize initialization_value = 0;</p>  <p>  if (g_once_init_enter (&amp;initialization_value))
    {
      gsize setup_value = 42; // initialization code here</p>  <p>      g_once_init_leave (&amp;initialization_value, setup_value);
    }</p>  <p>  // use initialization_value here
]|</p>
  <p>Since 2.14</p>
<terms>
<item>
<title><code>location</code></title>
  <p>location of a static initializable variable containing 0</p>
</item>
<item>
<title><code>ok</code></title>

</item>
</terms>

</page>
