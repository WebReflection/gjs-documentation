<?xml version="1.0"?>
<page id="GLib.log_set_always_fatal"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>GLib.LogLevelFlags</api:type>
      </api:returns>
      <api:name>g_log_set_always_fatal</api:name>
      <api:arg>
        <api:type>GLib.LogLevelFlags</api:type>
        <api:name>fatal_mask</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.log_set_always_fatal</title>
  <synopsis><code mime="text/x-gjs">
function log_set_always_fatal(fatal_mask: GLib.LogLevelFlags): GLib.LogLevelFlags {
    // Gjs wrapper for g_log_set_always_fatal()
}
  </code></synopsis>
  <p>Sets the message levels which are always fatal, in any log domain.
When a message with any of these levels is logged the program terminates.
You can only set the levels defined by GLib to be fatal.
<link xref="GLib.LogLevelFlags"/>.level_error is always fatal.</p>  <p>You can also make some message levels fatal at runtime by setting
the `G_DEBUG` environment variable (see
[Running GLib Applications](glib-running.html)).</p>

<terms>
<item>
<title><code>fatal_mask</code></title>
  <p>the mask containing bits set for each level
    of error which is to be fatal</p>
</item>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
