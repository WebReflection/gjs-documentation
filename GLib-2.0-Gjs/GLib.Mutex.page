<?xml version="1.0"?>
<page id="GLib.Mutex"
      type="guide"
      style="class"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="class" type="guide"/>
  </info>
  <title>GLib.Mutex</title>
  <synopsis><code>
const GLib = imports.gi.GLib;

let mutex = new GLib.Mutex();
  </code></synopsis>
  <p>The <link xref="GLib.Mutex"/> struct is an opaque data structure to represent a mutex
(mutual exclusion). It can be used to protect data against shared
access.</p>  <p>Take for example the following function:
|[&lt;!-- language="C" --&gt;
  int
  give_me_next_number (void)
  {
    static int current_number = 0;</p>  <p>    // now do a very complicated calculation to calculate the new
    // number, this might for example be a random number generator
    current_number = calc_next_number (current_number);</p>  <p>    return current_number;
  }
]|
It is easy to see that this won't work in a multi-threaded
application. There current_number must be protected against shared
access. A <link xref="GLib.Mutex"/> can be used as a solution to this problem:
|[&lt;!-- language="C" --&gt;
  int
  give_me_next_number (void)
  {
    static GMutex mutex;
    static int current_number = 0;
    int ret_val;</p>  <p>    g_mutex_lock (&amp;mutex);
    ret_val = current_number = calc_next_number (current_number);
    g_mutex_unlock (&amp;mutex);</p>  <p>    return ret_val;
  }
]|
Notice that the <link xref="GLib.Mutex"/> is not initialised to any particular value.
Its placement in static storage ensures that it will be initialised
to all-zeros, which is appropriate.</p>  <p>If a <link xref="GLib.Mutex"/> is placed in other contexts (eg: embedded in a struct)
then it must be explicitly initialised using <link xref="GLib.init"/>.</p>  <p>A <link xref="GLib.Mutex"/> should only be accessed via g_mutex_ functions.</p>

  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="constructor" style="linklist">
    <title>Constructors</title>
  </links>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="method" style="linklist">
    <title>Methods</title>
  </links>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="function" style="linklist">
    <title>Static Functions</title>
  </links>
  <links type="topic" ui:expanded="true" groups="field" style="linklist">
    <title>Fields</title>
  </links>
  <links type="topic" ui:expanded="true" groups="#first #default #last" style="linklist">
    <title>Other</title>
  </links>
</page>
