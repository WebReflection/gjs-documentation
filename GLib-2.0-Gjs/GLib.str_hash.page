<?xml version="1.0"?>
<page id="GLib.str_hash"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Number</api:type>
      </api:returns>
      <api:name>g_str_hash</api:name>
      <api:arg>
        <api:type>gpointer</api:type>
        <api:name>v</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.str_hash</title>
  <synopsis><code mime="text/x-gjs">
function str_hash(v: gpointer): Number {
    // Gjs wrapper for g_str_hash()
}
  </code></synopsis>
  <p>Converts a string to a hash value.</p>  <p>This function implements the widely used "djb" hash apparently
posted by Daniel Bernstein to comp.lang.c some time ago.  The 32
bit unsigned hash value starts at 5381 and for each byte 'c' in
the string, is updated: `hash = hash * 33 + c`. This function
uses the signed value of each byte.</p>  <p>It can be passed to <link xref="GLib.new"/> as the @hash_func parameter,
when using non-<code>null</code> strings as keys in a <link xref="GLib.HashTable"/>.</p>

<terms>
<item>
<title><code>v</code></title>
  <p>a string key</p>
</item>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
