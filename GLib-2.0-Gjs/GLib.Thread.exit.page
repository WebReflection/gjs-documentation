<?xml version="1.0"?>
<page id="GLib.Thread.exit"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GLib.Thread" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_thread_exit</api:name>
      <api:arg>
        <api:type>gpointer</api:type>
        <api:name>retval</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.Thread.exit</title>
  <synopsis><code mime="text/x-gjs">
function exit(retval: gpointer): void {
    // Gjs wrapper for g_thread_exit()
}
  </code></synopsis>
  <p>Terminates the current thread.</p>  <p>If another thread is waiting for us using <link xref="GLib.join"/> then the
waiting thread will be woken up and get <code>retval</code> as the return value
of <link xref="GLib.join"/>.</p>  <p>Calling <link xref="GLib.thread_exit"/> with a parameter <code>retval</code> is equivalent to
returning <code>retval</code> from the function @func, as given to <link xref="GLib.new"/>.</p>  <p>You must only call <link xref="GLib.thread_exit"/> from a thread that you created
yourself with <link xref="GLib.new"/> or related APIs. You must not call
this function from a thread created with another threading library
or or from within a <link xref="GLib.ThreadPool"/>.</p>

<terms>
<item>
<title><code>retval</code></title>
  <p>the return value of this thread</p>
</item>
</terms>

</page>
