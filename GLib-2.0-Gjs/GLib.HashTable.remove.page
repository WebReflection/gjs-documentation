<?xml version="1.0"?>
<page id="GLib.HashTable.remove"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GLib.HashTable" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_hash_table_remove</api:name>
      <api:arg>
        <api:type>{gpointer: gpointer}</api:type>
        <api:name>hash_table</api:name>
      </api:arg>
      <api:arg>
        <api:type>gpointer</api:type>
        <api:name>key</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.HashTable.remove</title>
  <synopsis><code mime="text/x-gjs">
function remove(hash_table: {gpointer: gpointer}, key: gpointer): Boolean {
    // Gjs wrapper for g_hash_table_remove()
}
  </code></synopsis>
  <p>Removes a key and its associated value from a <link xref="GLib.HashTable"/>.</p>  <p>If the <link xref="GLib.HashTable"/> was created using <link xref="GLib.new_full"/>, the
key and value are freed using the supplied destroy functions, otherwise
you have to make sure that any dynamically allocated values are freed
yourself.</p>

<terms>
<item>
<title><code>hash_table</code></title>
  <p>a <link xref="GLib.HashTable"/></p>
</item>
<item>
<title><code>key</code></title>
  <p>the key to remove</p>
</item>
<item>
<title><code>ok</code></title>

</item>
</terms>

</page>
