<?xml version="1.0"?>
<page id="GLib.IOChannel.set_line_term"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GLib.IOChannel" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_io_channel_set_line_term</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>line_term</api:name>
      </api:arg>
      <api:arg>
        <api:type>Number</api:type>
        <api:name>length</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.IOChannel.prototype.set_line_term</title>
  <synopsis><code mime="text/x-gjs">
function set_line_term(line_term: String, length: Number): void {
    // Gjs wrapper for g_io_channel_set_line_term()
}
  </code></synopsis>
  <p>This sets the string that <link xref="GLib.IOChannel"/> uses to determine
where in the file a line break occurs.</p>

<terms>
<item>
<title><code>line_term</code></title>
  <p>The line termination string. Use <code>null</code> for
            autodetect.  Autodetection breaks on "\n", "\r\n", "\r", "\0",
            and the Unicode paragraph separator. Autodetection should not be
            used for anything other than file-based channels.</p>
</item>
<item>
<title><code>length</code></title>
  <p>The length of the termination string. If -1 is passed, the
         string is assumed to be nul-terminated. This option allows
         termination strings with embedded nuls.</p>
</item>
</terms>

</page>
