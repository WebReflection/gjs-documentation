<?xml version="1.0"?>
<page id="GLib.HashTable.lookup_extended"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GLib.HashTable" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_hash_table_lookup_extended</api:name>
      <api:arg>
        <api:type>{gpointer: gpointer}</api:type>
        <api:name>hash_table</api:name>
      </api:arg>
      <api:arg>
        <api:type>gpointer</api:type>
        <api:name>lookup_key</api:name>
      </api:arg>
      <api:arg>
        <api:type>gpointer</api:type>
        <api:name>orig_key</api:name>
      </api:arg>
      <api:arg>
        <api:type>gpointer</api:type>
        <api:name>value</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.HashTable.lookup_extended</title>
  <synopsis><code mime="text/x-gjs">
function lookup_extended(hash_table: {gpointer: gpointer}, lookup_key: gpointer, orig_key: gpointer, value: gpointer): Boolean {
    // Gjs wrapper for g_hash_table_lookup_extended()
}
  </code></synopsis>
  <p>Looks up a key in the <link xref="GLib.HashTable"/>, returning the original key and the
associated value and a #gboolean which is <code>true</code> if the key was found. This
is useful if you need to free the memory allocated for the original key,
for example before calling <link xref="GLib.hash_table_remove"/>.</p>  <p>You can actually pass <code>null</code> for <code>lookup_key</code> to test
whether the <code>null</code> key exists, provided the hash and equal functions
of <code>hash_table</code> are <code>null</code>-safe.</p>

<terms>
<item>
<title><code>hash_table</code></title>
  <p>a <link xref="GLib.HashTable"/></p>
</item>
<item>
<title><code>lookup_key</code></title>
  <p>the key to look up</p>
</item>
<item>
<title><code>orig_key</code></title>
  <p>return location for the original key, or <code>null</code></p>
</item>
<item>
<title><code>value</code></title>
  <p>return location for the value associated with the key, or <code>null</code></p>
</item>
<item>
<title><code>ok</code></title>

</item>
</terms>

</page>
