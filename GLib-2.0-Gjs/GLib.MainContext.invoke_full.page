<?xml version="1.0"?>
<page id="GLib.MainContext.invoke_full"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GLib.MainContext" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_main_context_invoke_full</api:name>
      <api:arg>
        <api:type>Number(gint)</api:type>
        <api:name>priority</api:name>
      </api:arg>
      <api:arg>
        <api:type>GLib.SourceFunc</api:type>
        <api:name>function</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.MainContext.prototype.invoke_full</title>
  <synopsis><code mime="text/x-gjs">
function invoke_full(priority: Number(gint), function: <link xref="GLib.SourceFunc">GLib.SourceFunc</link>): void {
    // Gjs wrapper for g_main_context_invoke_full()
}
  </code></synopsis>
  <p>Invokes a function in such a way that <code>context</code> is owned during the
invocation of <code>function</code>.</p>  <p>This function is the same as <link xref="GLib.invoke"/> except that it
lets you specify the priority incase <code>function</code> ends up being
scheduled as an idle and also lets you give a <link xref="GLib.DestroyNotify"/> for <code>data</code>.</p>  <p><code>notify</code> should not assume that it is called from any particular
thread or with any particular context acquired.</p>
  <p>Since 2.28</p>
<terms>
<item>
<title><code>priority</code></title>
  <p>the priority at which to run <code>function</code></p>
</item>
<item>
<title><code>function</code></title>
  <p>function to call</p>
</item>
</terms>

</page>
