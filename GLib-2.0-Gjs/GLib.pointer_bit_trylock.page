<?xml version="1.0"?>
<page id="GLib.pointer_bit_trylock"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_pointer_bit_trylock</api:name>
      <api:arg>
        <api:type>gpointer</api:type>
        <api:name>address</api:name>
      </api:arg>
      <api:arg>
        <api:type>Number</api:type>
        <api:name>lock_bit</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.pointer_bit_trylock</title>
  <synopsis><code mime="text/x-gjs">
function pointer_bit_trylock(address: gpointer, lock_bit: Number): Boolean {
    // Gjs wrapper for g_pointer_bit_trylock()
}
  </code></synopsis>
  <p>This is equivalent to g_bit_trylock, but working on pointers (or
other pointer-sized values).</p>  <p>For portability reasons, you may only lock on the bottom 32 bits of
the pointer.</p>
  <p>Since 2.30</p>
<terms>
<item>
<title><code>address</code></title>
  <p>a pointer to a #gpointer-sized value</p>
</item>
<item>
<title><code>lock_bit</code></title>
  <p>a bit value between 0 and 31</p>
</item>
<item>
<title><code>ok</code></title>

</item>
</terms>

</page>
