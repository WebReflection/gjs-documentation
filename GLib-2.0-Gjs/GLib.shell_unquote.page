<?xml version="1.0"?>
<page id="GLib.shell_unquote"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>String</api:type>
      </api:returns>
      <api:name>g_shell_unquote</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>quoted_string</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.shell_unquote</title>
  <synopsis><code mime="text/x-gjs">
function shell_unquote(quoted_string: String): String {
    // Gjs wrapper for g_shell_unquote()
}
  </code></synopsis>
  <p>Unquotes a string as the shell (/bin/sh) would. Only handles
quotes; if a string contains file globs, arithmetic operators,
variables, backticks, redirections, or other special-to-the-shell
features, the result will be different from the result a real shell
would produce (the variables, backticks, etc. will be passed
through literally instead of being expanded). This function is
guaranteed to succeed if applied to the result of
<link xref="GLib.shell_quote"/>. If it fails, it returns <code>null</code> and sets the
error. The <code>quoted_string</code> need not actually contain quoted or
escaped text; <link xref="GLib.shell_unquote"/> simply goes through the string and
unquotes/unescapes anything that the shell would. Both single and
double quotes are handled, as are escapes including escaped
newlines. The return value must be freed with <link xref="GLib.free"/>. Possible
errors are in the #G_SHELL_ERROR domain.</p>  <p>Shell quoting rules are a bit strange. Single quotes preserve the
literal string exactly. escape sequences are not allowed; not even
\' - if you want a ' in the quoted text, you have to do something
like 'foo'\''bar'.  Double quotes allow $, `, ", \, and newline to
be escaped with backslash. Otherwise double quotes preserve things
literally.</p>

<terms>
<item>
<title><code>quoted_string</code></title>
  <p>shell-quoted string</p>
</item>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
