<?xml version="1.0"?>
<page id="GLib.Variant.new_tuple"
      type="topic"
      style="constructor"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GLib.Variant" group="constructor" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>GLib.Variant</api:type>
      </api:returns>
      <api:name>g_variant_new_tuple</api:name>
      <api:arg>
        <api:type>Array(GLib.Variant)</api:type>
        <api:name>children</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.Variant.new_tuple</title>
  <synopsis><code mime="text/x-gjs">
function new_tuple(children: Array(<link xref="GLib.Variant">GLib.Variant</link>)): <link xref="GLib.Variant">GLib.Variant</link> {
    // Gjs wrapper for g_variant_new_tuple()
}
  </code></synopsis>
  <p>Creates a new tuple <link xref="GLib.Variant"/> out of the items in <code>children</code>.  The
type is determined from the types of <code>children</code>.  No entry in the
<code>children</code> array may be <code>null</code>.</p>  <p>If <code>n_children</code> is 0 then the unit tuple is constructed.</p>  <p>If the <code>children</code> are floating references (see <link xref="GLib.ref_sink"/>), the
new instance takes ownership of them as if via <link xref="GLib.ref_sink"/>.</p>
  <p>Since 2.24</p>
<terms>
<item>
<title><code>children</code></title>
  <p>the items to make the tuple out of</p>
</item>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
