<?xml version="1.0"?>
<page id="GLib.RWLock.reader_lock"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GLib.RWLock" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_rw_lock_reader_lock</api:name>
    </api:function>
  </info>
  <title>GLib.RWLock.prototype.reader_lock</title>
  <synopsis><code mime="text/x-gjs">
function reader_lock(): void {
    // Gjs wrapper for g_rw_lock_reader_lock()
}
  </code></synopsis>
  <p>Obtain a read lock on <code>rw_lock</code>. If another thread currently holds
the write lock on <code>rw_lock</code> or blocks waiting for it, the current
thread will block. Read locks can be taken recursively.</p>  <p>It is implementation-defined how many threads are allowed to
hold read locks on the same lock simultaneously.</p>
  <p>Since 2.32</p>

</page>
