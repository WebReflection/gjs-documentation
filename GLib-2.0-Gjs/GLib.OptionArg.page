<?xml version="1.0"?>
<page id="GLib.OptionArg"
      type="guide"
      style="enum"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="enum" type="guide"/>
  </info>
  <title>GLib.OptionArg</title>
  <p>The <link xref="GLib.OptionArg"/> enum values determine which type of extra argument the
options expect to find. If an option expects an extra argument, it
can be specified in several ways; with a short option:
&lt;option&gt;-x arg&lt;/option&gt;, with a long option: &lt;option&gt;--name arg&lt;/option&gt;
or combined in a single argument: &lt;option&gt;--name=arg&lt;/option&gt;.</p>

<terms>
<item>
<title><code>OptionArg.NONE</code></title>
  <p>No extra argument. This is useful for simple flags.</p>
</item>
<item>
<title><code>OptionArg.STRING</code></title>
  <p>The option takes a string argument.</p>
</item>
<item>
<title><code>OptionArg.INT</code></title>
  <p>The option takes an integer argument.</p>
</item>
<item>
<title><code>OptionArg.CALLBACK</code></title>
  <p>The option provides a callback to parse the
 extra argument.</p>
</item>
<item>
<title><code>OptionArg.FILENAME</code></title>
  <p>The option takes a filename as argument.</p>
</item>
<item>
<title><code>OptionArg.STRING_ARRAY</code></title>
  <p>The option takes a string argument, multiple
 uses of the option are collected into an array of strings.</p>
</item>
<item>
<title><code>OptionArg.FILENAME_ARRAY</code></title>
  <p>The option takes a filename as argument,
 multiple uses of the option are collected into an array of strings.</p>
</item>
<item>
<title><code>OptionArg.DOUBLE</code></title>
  <p>The option takes a double argument. The argument
 can be formatted either for the user's locale or for the "C" locale. Since 2.12</p>
</item>
<item>
<title><code>OptionArg.INT64</code></title>
  <p>The option takes a 64-bit integer. Like <link xref="GLib.OptionArg"/>.int
 but for larger numbers. The number can be in decimal base, or in hexadecimal
 (when prefixed with &lt;literal&gt;0x&lt;/literal&gt;, for example, &lt;literal&gt;0xffffffff&lt;/literal&gt;).
 Since 2.12</p>
</item>
</terms>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="function" style="linklist">
    <title>Functions</title>
  </links>
</page>
