<?xml version="1.0"?>
<page id="GLib.spawn_sync"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Boolean</api:type>
      </api:returns>
      <api:name>g_spawn_sync</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>working_directory</api:name>
      </api:arg>
      <api:arg>
        <api:type>Array(String)</api:type>
        <api:name>argv</api:name>
      </api:arg>
      <api:arg>
        <api:type>Array(String)</api:type>
        <api:name>envp</api:name>
      </api:arg>
      <api:arg>
        <api:type>GLib.SpawnFlags</api:type>
        <api:name>flags</api:name>
      </api:arg>
      <api:arg>
        <api:type>GLib.SpawnChildSetupFunc</api:type>
        <api:name>child_setup</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.spawn_sync</title>
  <synopsis><code mime="text/x-gjs">
function spawn_sync(working_directory: String, argv: Array(String), envp: Array(String), flags: <link xref="GLib.SpawnFlags">GLib.SpawnFlags</link>, child_setup: <link xref="GLib.SpawnChildSetupFunc">GLib.SpawnChildSetupFunc</link>): [ok: Boolean, standard_output: Array(Number(guint8)), standard_error: Array(Number(guint8)), exit_status: Number(gint)] {
    // Gjs wrapper for g_spawn_sync()
}
  </code></synopsis>
  <p>Executes a child synchronously (waits for the child to exit before returning).
All output from the child is stored in <code>standard_output</code> and <code>standard_error</code>,
if those parameters are non-<code>null</code>. Note that you must set the
<link xref="GLib.SpawnFlags"/>.stdout_to_dev_null and <link xref="GLib.SpawnFlags"/>.stderr_to_dev_null flags when
passing <code>null</code> for <code>standard_output</code> and <code>standard_error</code>.</p>  <p>If <code>exit_status</code> is non-<code>null</code>, the platform-specific exit status of
the child is stored there; see the documentation of
<link xref="GLib.spawn_check_exit_status"/> for how to use and interpret this.
Note that it is invalid to pass <link xref="GLib.SpawnFlags"/>.do_not_reap_child in
<code>flags</code>.</p>  <p>If an error occurs, no data is returned in <code>standard_output</code>,
<code>standard_error</code>, or <code>exit_status</code>.</p>  <p>This function calls <link xref="GLib.spawn_async_with_pipes"/> internally; see that
function for full details on the other parameters and details on
how these functions work on Windows.</p>

<terms>
<item>
<title><code>working_directory</code></title>
  <p>child's current working directory, or <code>null</code> to inherit parent's</p>
</item>
<item>
<title><code>argv</code></title>
  <p>child's argument vector</p>
</item>
<item>
<title><code>envp</code></title>
  <p>child's environment, or <code>null</code> to inherit parent's</p>
</item>
<item>
<title><code>flags</code></title>
  <p>flags from <link xref="GLib.SpawnFlags"/></p>
</item>
<item>
<title><code>child_setup</code></title>
  <p>function to run in the child just before exec()</p>
</item>
<item>
<title><code>ok</code></title>

</item>
<item>
<title><code>standard_output</code></title>
  <p>return location for child output, or <code>null</code></p>
</item>
<item>
<title><code>standard_error</code></title>
  <p>return location for child error messages, or <code>null</code></p>
</item>
<item>
<title><code>exit_status</code></title>
  <p>return location for child exit status, as returned by waitpid(), or <code>null</code></p>
</item>
</terms>

</page>
