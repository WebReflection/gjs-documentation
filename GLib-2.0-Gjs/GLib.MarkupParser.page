<?xml version="1.0"?>
<page id="GLib.MarkupParser"
      type="guide"
      style="class"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="class" type="guide"/>
  </info>
  <title>GLib.MarkupParser</title>
  <synopsis><code>
const GLib = imports.gi.GLib;

let markupParser = new GLib.MarkupParser();
  </code></synopsis>
  <p>Any of the fields in <link xref="GLib.MarkupParser"/> can be <code>null</code>, in which case they
will be ignored. Except for the @error function, any of these callbacks
can set an error; in particular the <link xref="GLib.MarkupError"/>.unknown_element,
<link xref="GLib.MarkupError"/>.unknown_attribute, and <link xref="GLib.MarkupError"/>.invalid_content
errors are intended to be set from these callbacks. If you set an error
from a callback, <link xref="GLib.MarkupParseContext.parse"/> will report that error
back to its caller.</p>

  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="constructor" style="linklist">
    <title>Constructors</title>
  </links>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="method" style="linklist">
    <title>Methods</title>
  </links>
  <links type="topic" ui:expanded="true"
         api:type="function" api:mime="text/x-gjs"
         groups="function" style="linklist">
    <title>Static Functions</title>
  </links>
  <links type="topic" ui:expanded="true" groups="field" style="linklist">
    <title>Fields</title>
  </links>
  <links type="topic" ui:expanded="true" groups="#first #default #last" style="linklist">
    <title>Other</title>
  </links>
</page>
