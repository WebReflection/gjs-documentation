<?xml version="1.0"?>
<page id="GLib.ascii_strtod"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>Number</api:type>
      </api:returns>
      <api:name>g_ascii_strtod</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>nptr</api:name>
      </api:arg>
      <api:arg>
        <api:type>String</api:type>
        <api:name>endptr</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.ascii_strtod</title>
  <synopsis><code mime="text/x-gjs">
function ascii_strtod(nptr: String, endptr: String): Number {
    // Gjs wrapper for g_ascii_strtod()
}
  </code></synopsis>
  <p>Converts a string to a #gdouble value.</p>  <p>This function behaves like the standard strtod() function
does in the C locale. It does this without actually changing
the current locale, since that would not be thread-safe.
A limitation of the implementation is that this function
will still accept localized versions of infinities and NANs.</p>  <p>This function is typically used when reading configuration
files or other non-user input that should be locale independent.
To handle input from the user you should normally use the
locale-sensitive system strtod() function.</p>  <p>To convert from a #gdouble to a string in a locale-insensitive
way, use <link xref="GLib.ascii_dtostr"/>.</p>  <p>If the correct value would cause overflow, plus or minus %HUGE_VAL
is returned (according to the sign of the value), and %ERANGE is
stored in %errno. If the correct value would cause underflow,
zero is returned and %ERANGE is stored in %errno.</p>  <p>This function resets %errno before calling strtod() so that
you can reliably detect overflow and underflow.</p>

<terms>
<item>
<title><code>nptr</code></title>
  <p>the string to convert to a numeric value.</p>
</item>
<item>
<title><code>endptr</code></title>
  <p>if non-<code>null</code>, it returns the character after
          the last character used in the conversion.</p>
</item>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
