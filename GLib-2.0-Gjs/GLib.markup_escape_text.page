<?xml version="1.0"?>
<page id="GLib.markup_escape_text"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>String</api:type>
      </api:returns>
      <api:name>g_markup_escape_text</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>text</api:name>
      </api:arg>
      <api:arg>
        <api:type>Number(gssize)</api:type>
        <api:name>length</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.markup_escape_text</title>
  <synopsis><code mime="text/x-gjs">
function markup_escape_text(text: String, length: Number(gssize)): String {
    // Gjs wrapper for g_markup_escape_text()
}
  </code></synopsis>
  <p>Escapes text so that the markup parser will parse it verbatim.
Less than, greater than, ampersand, etc. are replaced with the
corresponding entities. This function would typically be used
when writing out a file to be parsed with the markup parser.</p>  <p>Note that this function doesn't protect whitespace and line endings
from being processed according to the XML rules for normalization
of line endings and attribute values.</p>  <p>Note also that this function will produce character references in
the range of &amp;#x1; ... &amp;#x1f; for all control sequences
except for tabstop, newline and carriage return.  The character
references in this range are not valid XML 1.0, but they are
valid XML 1.1 and will be accepted by the GMarkup parser.</p>

<terms>
<item>
<title><code>text</code></title>
  <p>some valid UTF-8 text</p>
</item>
<item>
<title><code>length</code></title>
  <p>length of <code>text</code> in bytes, or -1 if the text is nul-terminated</p>
</item>
<item>
<title><code>Returns</code></title>

</item>
</terms>

</page>
