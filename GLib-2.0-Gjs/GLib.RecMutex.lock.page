<?xml version="1.0"?>
<page id="GLib.RecMutex.lock"
      type="topic"
      style="method"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GLib.RecMutex" group="method" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_rec_mutex_lock</api:name>
    </api:function>
  </info>
  <title>GLib.RecMutex.prototype.lock</title>
  <synopsis><code mime="text/x-gjs">
function lock(): void {
    // Gjs wrapper for g_rec_mutex_lock()
}
  </code></synopsis>
  <p>Locks <code>rec_mutex</code>. If <code>rec_mutex</code> is already locked by another
thread, the current thread will block until <code>rec_mutex</code> is
unlocked by the other thread. If <code>rec_mutex</code> is already locked
by the current thread, the 'lock count' of <code>rec_mutex</code> is increased.
The mutex will only become available again when it is unlocked
as many times as it has been locked.</p>
  <p>Since 2.32</p>

</page>
