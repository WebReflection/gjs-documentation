<?xml version="1.0"?>
<page id="GLib.log_default_handler"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="index" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_log_default_handler</api:name>
      <api:arg>
        <api:type>String</api:type>
        <api:name>log_domain</api:name>
      </api:arg>
      <api:arg>
        <api:type>GLib.LogLevelFlags</api:type>
        <api:name>log_level</api:name>
      </api:arg>
      <api:arg>
        <api:type>String</api:type>
        <api:name>message</api:name>
      </api:arg>
      <api:arg>
        <api:type>gpointer</api:type>
        <api:name>unused_data</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.log_default_handler</title>
  <synopsis><code mime="text/x-gjs">
function log_default_handler(log_domain: String, log_level: GLib.LogLevelFlags, message: String, unused_data: gpointer): void {
    // Gjs wrapper for g_log_default_handler()
}
  </code></synopsis>
  <p>The default log handler set up by GLib; <link xref="GLib.log_set_default_handler"/>
allows to install an alternate default log handler.
This is used if no log handler has been set for the particular log
domain and log level combination. It outputs the message to stderr
or stdout and if the log level is fatal it calls abort(). It automatically
prints a new-line character after the message, so one does not need to be
manually included in <code>message</code>.</p>  <p>The behavior of this log handler can be influenced by a number of
environment variables:</p>  <p>- `G_MESSAGES_PREFIXED`: A :-separated list of log levels for which
  messages should be prefixed by the program name and PID of the
  aplication.</p>  <p>- `G_MESSAGES_DEBUG`: A space-separated list of log domains for
  which debug and informational messages are printed. By default
  these messages are not printed.</p>  <p>stderr is used for levels <link xref="GLib.LogLevelFlags"/>.level_error, <link xref="GLib.LogLevelFlags"/>.level_critical,
<link xref="GLib.LogLevelFlags"/>.level_warning and <link xref="GLib.LogLevelFlags"/>.level_message. stdout is used for
the rest.</p>

<terms>
<item>
<title><code>log_domain</code></title>
  <p>the log domain of the message</p>
</item>
<item>
<title><code>log_level</code></title>
  <p>the level of the message</p>
</item>
<item>
<title><code>message</code></title>
  <p>the message</p>
</item>
<item>
<title><code>unused_data</code></title>
  <p>data passed from <link xref="GLib.log"/> which is unused</p>
</item>
</terms>

</page>
