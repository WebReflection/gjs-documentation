<?xml version="1.0"?>
<page id="GLib.HashTable.destroy"
      type="topic"
      style="function"
      xmlns="http://projectmallard.org/1.0/"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/1.0/ui/">
  <info>
    <link xref="GLib.HashTable" group="function" type="guide"/>
    <api:function>
      <api:returns>
        <api:type>void</api:type>
      </api:returns>
      <api:name>g_hash_table_destroy</api:name>
      <api:arg>
        <api:type>{gpointer: gpointer}</api:type>
        <api:name>hash_table</api:name>
      </api:arg>
    </api:function>
  </info>
  <title>GLib.HashTable.destroy</title>
  <synopsis><code mime="text/x-gjs">
function destroy(hash_table: {gpointer: gpointer}): void {
    // Gjs wrapper for g_hash_table_destroy()
}
  </code></synopsis>
  <p>Destroys all keys and values in the <link xref="GLib.HashTable"/> and decrements its
reference count by 1. If keys and/or values are dynamically allocated,
you should either free them first or create the <link xref="GLib.HashTable"/> with destroy
notifiers using <link xref="GLib.new_full"/>. In the latter case the destroy
functions you supplied will be called on all keys and values during the
destruction phase.</p>

<terms>
<item>
<title><code>hash_table</code></title>
  <p>a <link xref="GLib.HashTable"/></p>
</item>
</terms>

</page>
